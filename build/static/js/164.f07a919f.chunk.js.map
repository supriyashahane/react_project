{"version":3,"sources":["views/application/users/list/Style1/UserList.tsx","views/application/users/list/Style1/index.tsx"],"names":["avatarImage","require","UserList","theme","useTheme","React","useState","data","setData","getData","a","axios","get","response","users","useEffect","TableContainer","Table","TableHead","TableRow","TableCell","sx","pl","align","pr","TableBody","map","row","index","hover","id","Grid","container","spacing","alignItems","item","Avatar","alt","src","avatar","default","xs","zeroMinWidth","Typography","variant","component","name","status","color","width","height","noWrap","email","location","friends","followers","Chip","label","size","background","palette","mode","dark","main","success","light","orange","warning","Stack","direction","justifyContent","Tooltip","placement","title","IconButton","fontSize","borderColor","ListStylePage1","anchorEl","setAnchorEl","handleClose","MainCard","gridSpacing","OutlinedInput","placeholder","startAdornment","InputAdornment","position","stroke","content","p","Pagination","count","Button","grey","endIcon","onClick","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem"],"mappings":"kcA6BMA,EAAcC,OAgILC,EA5HE,WACb,IAAMC,EAAQC,cAEd,EAAwBC,IAAMC,SAAwB,IAAtD,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAO,uCAAG,4BAAAC,EAAA,sEACWC,IAAMC,IAAI,uBADrB,OACNC,EADM,OAEZL,EAAQK,EAASN,KAAKO,OAFV,2CAAH,qDASb,OAJAT,IAAMU,WAAU,WACZN,MACD,IAGC,cAACO,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,GAAI,CAAEC,GAAI,GAArB,eACA,cAACF,EAAA,EAAD,2BACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,sBACA,cAACA,EAAA,EAAD,wBACA,cAACA,EAAA,EAAD,qBACA,cAACA,EAAA,EAAD,CAAWG,MAAM,SAASF,GAAI,CAAEG,GAAI,GAApC,0BAKR,cAACC,EAAA,EAAD,UACKlB,GACGA,EAAKmB,KAAI,SAACC,EAAKC,GAAN,OACL,eAACT,EAAA,EAAD,CAAUU,OAAK,EAAf,UACI,cAACT,EAAA,EAAD,CAAWC,GAAI,CAAEC,GAAI,GAArB,SAA2BK,EAAIG,KAC/B,cAACV,EAAA,EAAD,UACI,eAACW,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,WAAW,SAAvC,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAACC,EAAA,EAAD,CAAQC,IAAI,SAASC,IAAKtC,EAAY,KAAD,OAAM2B,EAAIY,SAAUC,YAE7D,eAACT,EAAA,EAAD,CAAMI,MAAI,EAACM,IAAE,EAACC,cAAY,EAA1B,UACI,eAACC,EAAA,EAAD,CAAYpB,MAAM,OAAOqB,QAAQ,YAAYC,UAAU,MAAvD,UACKlB,EAAImB,KAAM,IACK,WAAfnB,EAAIoB,QACD,cAAC,IAAD,CAAiB1B,GAAI,CAAE2B,MAAO,eAAgBC,MAAO,GAAIC,OAAQ,SAGzE,cAACP,EAAA,EAAD,CAAYpB,MAAM,OAAOqB,QAAQ,YAAYO,QAAM,EAAnD,SACKxB,EAAIyB,gBAKrB,cAAChC,EAAA,EAAD,UAAYO,EAAI0B,WAChB,cAACjC,EAAA,EAAD,UAAYO,EAAI2B,UAChB,cAAClC,EAAA,EAAD,UAAYO,EAAI4B,YAChB,eAACnC,EAAA,EAAD,WACoB,WAAfO,EAAIoB,QACD,cAACS,EAAA,EAAD,CACIC,MAAM,SACNC,KAAK,QACLrC,GAAI,CACAsC,WAC2B,SAAvBxD,EAAMyD,QAAQC,KACR1D,EAAMyD,QAAQE,KAAKC,KACnB5D,EAAMyD,QAAQI,QAAQC,MAAQ,GACxCjB,MAAO7C,EAAMyD,QAAQI,QAAQF,QAIzB,aAAfnC,EAAIoB,QACD,cAACS,EAAA,EAAD,CACIC,MAAM,WACNC,KAAK,QACLrC,GAAI,CACAsC,WAC2B,SAAvBxD,EAAMyD,QAAQC,KACR1D,EAAMyD,QAAQE,KAAKC,KACnB5D,EAAMyD,QAAQM,OAAOD,MAAQ,GACvCjB,MAAO7C,EAAMyD,QAAQM,OAAOJ,QAIxB,YAAfnC,EAAIoB,QACD,cAACS,EAAA,EAAD,CACIC,MAAM,UACNC,KAAK,QACLrC,GAAI,CACAsC,WAC2B,SAAvBxD,EAAMyD,QAAQC,KAAkB1D,EAAMyD,QAAQE,KAAKC,KAAO5D,EAAMyD,QAAQO,QAAQF,MACpFjB,MAAO7C,EAAMyD,QAAQO,QAAQL,WAK7C,cAAC1C,EAAA,EAAD,CAAWG,MAAM,SAASF,GAAI,CAAEG,GAAI,GAApC,SACI,eAAC4C,EAAA,EAAD,CAAOC,UAAU,MAAMC,eAAe,SAASpC,WAAW,SAA1D,UACI,cAACqC,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAM,UAA/B,SACI,cAACC,EAAA,EAAD,CAAY1B,MAAM,UAAU,aAAW,SAASU,KAAK,QAArD,SACI,cAAC,IAAD,CAAuBrC,GAAI,CAAEsD,SAAU,gBAG/C,cAACJ,EAAA,EAAD,CAASC,UAAU,MAAMC,MAAM,QAA/B,SACI,cAACC,EAAA,EAAD,CACI1B,MAAM,UACN3B,GAAI,CACA2B,MAAO7C,EAAMyD,QAAQM,OAAOJ,KAC5Bc,YAAazE,EAAMyD,QAAQM,OAAOH,KAClC,WAAY,CAAEJ,WAAYxD,EAAMyD,QAAQM,OAAOD,QAEnDP,KAAK,QAPT,SASI,cAAC,IAAD,CAAkBrC,GAAI,CAAEsD,SAAU,uBA/EjC/C,c,2CC4BlCiD,UA5EQ,WACnB,IAAM1E,EAAQC,cACd,EAAgCC,IAAMC,SAAuE,MAA7G,mBAAOwE,EAAP,KAAiBC,EAAjB,KAKMC,EAAc,WAChBD,EAAY,OAEhB,OACI,eAACE,EAAA,EAAD,CACIR,MACI,eAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,SAASoC,eAAe,gBAAgBrC,QAASiD,IAA5E,UACI,cAACnD,EAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAApB,oBAEJ,cAACb,EAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAACgD,EAAA,EAAD,CACIrD,GAAG,2BACHsD,YAAY,SACZC,eACI,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,SACI,cAAC,IAAD,CAAYC,OAAQ,IAAK9B,KAAK,WAGtCA,KAAK,eAKrB+B,SAAS,EApBb,UAsBI,cAAC,EAAD,IACA,cAAC1D,EAAA,EAAD,CAAMI,MAAI,EAACM,GAAI,GAAIpB,GAAI,CAAEqE,EAAG,GAA5B,SACI,eAAC3D,EAAA,EAAD,CAAMC,WAAS,EAACsC,eAAe,gBAAgBrC,QAASiD,IAAxD,UACI,cAACnD,EAAA,EAAD,CAAMI,MAAI,EAAV,SACI,cAACwD,EAAA,EAAD,CAAYC,MAAO,GAAI5C,MAAM,cAEjC,eAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,UACI,cAAC0D,EAAA,EAAD,CACInC,KAAK,QACLrC,GAAI,CAAE2B,MAAO7C,EAAMyD,QAAQkC,KAAK,MAChC9C,MAAM,YACN+C,QAAS,cAAC,IAAD,IACTC,QA1CJ,SAACC,GACjBlB,EAAYkB,EAAMC,gBAoCF,qBASA,eAACC,EAAA,EAAD,CACIrE,GAAG,wBACHgD,SAAUA,EACVsB,aAAW,EACXC,KAAMC,QAAQxB,GACdyB,QAASvB,EACTpC,QAAQ,eACR4D,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAbpB,UAgBI,cAACE,EAAA,EAAD,CAAUZ,QAAShB,EAAnB,sBACA,cAAC4B,EAAA,EAAD,CAAUZ,QAAShB,EAAnB,sBACA,cAAC4B,EAAA,EAAD,CAAUZ,QAAShB,EAAnB","file":"static/js/164.f07a919f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Chip,\r\n    Grid,\r\n    IconButton,\r\n    Stack,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Tooltip,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from 'ui-component/extended/Avatar';\r\nimport axios from 'utils/axios';\r\nimport { UserProfile } from '_mockApis/user-profile/types';\r\n\r\n// assets\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ChatBubbleTwoToneIcon from '@mui/icons-material/ChatBubbleTwoTone';\r\nimport BlockTwoToneIcon from '@mui/icons-material/BlockTwoTone';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// ==============================|| USER LIST 1 ||============================== //\r\n\r\nconst UserList = () => {\r\n    const theme = useTheme();\r\n\r\n    const [data, setData] = React.useState<UserProfile[]>([]);\r\n    const getData = async () => {\r\n        const response = await axios.get('/api/user-list/list');\r\n        setData(response.data.users);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        getData();\r\n    }, []);\r\n\r\n    return (\r\n        <TableContainer>\r\n            <Table>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell sx={{ pl: 3 }}>#</TableCell>\r\n                        <TableCell>User Profile</TableCell>\r\n                        <TableCell>Country</TableCell>\r\n                        <TableCell>Friends</TableCell>\r\n                        <TableCell>Followers</TableCell>\r\n                        <TableCell>Status</TableCell>\r\n                        <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                            Actions\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {data &&\r\n                        data.map((row, index) => (\r\n                            <TableRow hover key={index}>\r\n                                <TableCell sx={{ pl: 3 }}>{row.id}</TableCell>\r\n                                <TableCell>\r\n                                    <Grid container spacing={2} alignItems=\"center\">\r\n                                        <Grid item>\r\n                                            <Avatar alt=\"User 1\" src={avatarImage(`./${row.avatar}`).default} />\r\n                                        </Grid>\r\n                                        <Grid item xs zeroMinWidth>\r\n                                            <Typography align=\"left\" variant=\"subtitle1\" component=\"div\">\r\n                                                {row.name}{' '}\r\n                                                {row.status === 'Active' && (\r\n                                                    <CheckCircleIcon sx={{ color: 'success.dark', width: 14, height: 14 }} />\r\n                                                )}\r\n                                            </Typography>\r\n                                            <Typography align=\"left\" variant=\"subtitle2\" noWrap>\r\n                                                {row.email}\r\n                                            </Typography>\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                </TableCell>\r\n                                <TableCell>{row.location}</TableCell>\r\n                                <TableCell>{row.friends}</TableCell>\r\n                                <TableCell>{row.followers}</TableCell>\r\n                                <TableCell>\r\n                                    {row.status === 'Active' && (\r\n                                        <Chip\r\n                                            label=\"Active\"\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                background:\r\n                                                    theme.palette.mode === 'dark'\r\n                                                        ? theme.palette.dark.main\r\n                                                        : theme.palette.success.light + 60,\r\n                                                color: theme.palette.success.dark\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                    {row.status === 'Rejected' && (\r\n                                        <Chip\r\n                                            label=\"Rejected\"\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                background:\r\n                                                    theme.palette.mode === 'dark'\r\n                                                        ? theme.palette.dark.main\r\n                                                        : theme.palette.orange.light + 80,\r\n                                                color: theme.palette.orange.dark\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                    {row.status === 'Pending' && (\r\n                                        <Chip\r\n                                            label=\"Pending\"\r\n                                            size=\"small\"\r\n                                            sx={{\r\n                                                background:\r\n                                                    theme.palette.mode === 'dark' ? theme.palette.dark.main : theme.palette.warning.light,\r\n                                                color: theme.palette.warning.dark\r\n                                            }}\r\n                                        />\r\n                                    )}\r\n                                </TableCell>\r\n                                <TableCell align=\"center\" sx={{ pr: 3 }}>\r\n                                    <Stack direction=\"row\" justifyContent=\"center\" alignItems=\"center\">\r\n                                        <Tooltip placement=\"top\" title=\"Message\">\r\n                                            <IconButton color=\"primary\" aria-label=\"delete\" size=\"large\">\r\n                                                <ChatBubbleTwoToneIcon sx={{ fontSize: '1.1rem' }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                        <Tooltip placement=\"top\" title=\"Block\">\r\n                                            <IconButton\r\n                                                color=\"primary\"\r\n                                                sx={{\r\n                                                    color: theme.palette.orange.dark,\r\n                                                    borderColor: theme.palette.orange.main,\r\n                                                    '&:hover ': { background: theme.palette.orange.light }\r\n                                                }}\r\n                                                size=\"large\"\r\n                                            >\r\n                                                <BlockTwoToneIcon sx={{ fontSize: '1.1rem' }} />\r\n                                            </IconButton>\r\n                                        </Tooltip>\r\n                                    </Stack>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nexport default UserList;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Grid, InputAdornment, Menu, MenuItem, OutlinedInput, Pagination, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport UserList from './UserList';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// assets\r\nimport { IconSearch } from '@tabler/icons';\r\nimport ExpandMoreRoundedIcon from '@mui/icons-material/ExpandMoreRounded';\r\n\r\n// ==============================|| USER LIST STYLE 1 ||============================== //\r\n\r\nconst ListStylePage1 = () => {\r\n    const theme = useTheme();\r\n    const [anchorEl, setAnchorEl] = React.useState<Element | ((element: Element) => Element) | null | undefined>(null);\r\n    const handleClick = (event: React.MouseEvent) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    return (\r\n        <MainCard\r\n            title={\r\n                <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Typography variant=\"h3\">List</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <OutlinedInput\r\n                            id=\"input-search-list-style1\"\r\n                            placeholder=\"Search\"\r\n                            startAdornment={\r\n                                <InputAdornment position=\"start\">\r\n                                    <IconSearch stroke={1.5} size=\"1rem\" />\r\n                                </InputAdornment>\r\n                            }\r\n                            size=\"small\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n            content={false}\r\n        >\r\n            <UserList />\r\n            <Grid item xs={12} sx={{ p: 3 }}>\r\n                <Grid container justifyContent=\"space-between\" spacing={gridSpacing}>\r\n                    <Grid item>\r\n                        <Pagination count={10} color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button\r\n                            size=\"large\"\r\n                            sx={{ color: theme.palette.grey[900] }}\r\n                            color=\"secondary\"\r\n                            endIcon={<ExpandMoreRoundedIcon />}\r\n                            onClick={handleClick}\r\n                        >\r\n                            10 Rows\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"menu-user-list-style1\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                            variant=\"selectedMenu\"\r\n                            anchorOrigin={{\r\n                                vertical: 'top',\r\n                                horizontal: 'right'\r\n                            }}\r\n                            transformOrigin={{\r\n                                vertical: 'bottom',\r\n                                horizontal: 'right'\r\n                            }}\r\n                        >\r\n                            <MenuItem onClick={handleClose}> 10 Rows</MenuItem>\r\n                            <MenuItem onClick={handleClose}> 20 Rows</MenuItem>\r\n                            <MenuItem onClick={handleClose}> 30 Rows </MenuItem>\r\n                        </Menu>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default ListStylePage1;\r\n"],"sourceRoot":""}