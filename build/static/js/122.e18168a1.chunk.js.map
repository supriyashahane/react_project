{"version":3,"sources":["views/forms/components/Switch.tsx","ui-component/extended/Avatar.tsx","ui-component/cards/CardSecondaryAction.tsx","../node_modules/@mui/material/Link/linkClasses.js","../node_modules/@mui/material/Link/Link.js"],"names":["UISwitch","theme","useTheme","title","secondary","link","container","spacing","gridSpacing","item","xs","md","defaultChecked","inputProps","disabled","row","control","label","value","color","labelPlacement","size","sx","palette","warning","dark","bgcolor","main","success","light","error","orange","Avatar","className","outline","others","colorSX","background","paper","outlineSX","border","borderColor","sizeSX","width","height","CardSecondaryAction","icon","placement","disableRipple","component","Link","href","target","alt","viewBox","fill","xmlns","clipPath","d","primary","id","transform","getLinkUtilityClass","slot","generateUtilityClass","linkClasses","generateUtilityClasses","_excluded","colorTransformations","textPrimary","textSecondary","LinkRoot","styled","Typography","name","overridesResolver","props","styles","ownerState","root","capitalize","underline","button","getPath","transformDeprecatedColors","_extends","textDecoration","textDecorationColor","alpha","undefined","position","WebkitTapHighlightColor","backgroundColor","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","focusVisible","React","inProps","ref","useThemeProps","onBlur","onFocus","TypographyClasses","variant","other","_objectWithoutPropertiesLoose","useIsFocusVisible","isFocusVisibleRef","handleBlurVisible","handleFocusVisible","focusVisibleRef","setFocusVisible","handlerRef","useForkRef","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","event","current"],"mappings":"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","file":"static/js/122.e18168a1.chunk.js","sourcesContent":["// material-ui\r\nimport { FormControl, FormControlLabel, FormGroup, Grid, Switch } from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// project imports\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ==============================|| SWITCH PAGE ||============================== //\r\n\r\nconst UISwitch = () => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <MainCard title=\"Switch\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/switches/\" />}>\r\n            <Grid container spacing={gridSpacing}>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Basic Switch\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <Switch defaultChecked inputProps={{ 'aria-label': 'checked' }} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch inputProps={{ 'aria-label': 'unchecked' }} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch disabled defaultChecked inputProps={{ 'aria-label': 'disabled checked' }} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch disabled inputProps={{ 'aria-label': 'disabled unchecked' }} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"With label\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <FormGroup row>\r\n                                        <FormControlLabel control={<Switch defaultChecked />} label=\"Label\" />\r\n                                        <FormControlLabel disabled control={<Switch />} label=\"Disabled\" />\r\n                                    </FormGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"With Placement\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <FormControl>\r\n                                    <FormGroup aria-label=\"position\" row>\r\n                                        <FormControlLabel\r\n                                            value=\"top\"\r\n                                            control={<Switch color=\"primary\" />}\r\n                                            label=\"Top\"\r\n                                            labelPlacement=\"top\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"start\"\r\n                                            control={<Switch color=\"primary\" />}\r\n                                            label=\"Start\"\r\n                                            labelPlacement=\"start\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"bottom\"\r\n                                            control={<Switch color=\"primary\" />}\r\n                                            label=\"Bottom\"\r\n                                            labelPlacement=\"bottom\"\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value=\"end\"\r\n                                            control={<Switch color=\"primary\" />}\r\n                                            label=\"End\"\r\n                                            labelPlacement=\"end\"\r\n                                        />\r\n                                    </FormGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <SubCard title=\"Size\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <Switch defaultChecked size=\"small\" inputProps={{ 'aria-label': 'small' }} />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch defaultChecked inputProps={{ 'aria-label': 'normal' }} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <SubCard title=\"With Color\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid item>\r\n                                <Switch defaultChecked color=\"primary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.warning.dark,\r\n                                        '& .Mui-checked': { color: `${theme.palette.warning.dark} !important` },\r\n                                        '& .Mui-checked+.MuiSwitch-track': { bgcolor: `${theme.palette.warning.main} !important` }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.success.dark,\r\n                                        '& .Mui-checked': { color: `${theme.palette.success.dark} !important` },\r\n                                        '& .Mui-checked+.MuiSwitch-track': { bgcolor: `${theme.palette.success.light} !important` }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.error.main,\r\n                                        '& .Mui-checked': { color: `${theme.palette.error.main} !important` },\r\n                                        '& .Mui-checked+.MuiSwitch-track': { bgcolor: `${theme.palette.error.light} !important` }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch defaultChecked color=\"secondary\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.orange.main,\r\n                                        '& .Mui-checked': { color: `${theme.palette.orange.main} !important` },\r\n                                        '& .Mui-checked+.MuiSwitch-track': { bgcolor: `${theme.palette.orange.light} !important` }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Switch\r\n                                    defaultChecked\r\n                                    sx={{\r\n                                        color: theme.palette.dark[900],\r\n                                        '& .Mui-checked': { color: `${theme.palette.dark[900]} !important` },\r\n                                        '& .Mui-checked+.MuiSwitch-track': { bgcolor: `${theme.palette.dark.light} !important` }\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </SubCard>\r\n                </Grid>\r\n            </Grid>\r\n        </MainCard>\r\n    );\r\n};\r\n\r\nexport default UISwitch;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport MuiAvatar, { AvatarProps } from '@mui/material/Avatar';\r\nimport { OverridableComponent } from '@mui/material/OverridableComponent';\r\nimport { LinkTarget } from 'types';\r\n\r\n// ==============================|| AVATAR ||============================== //\r\n\r\nexport interface avatarProps extends AvatarProps {\r\n    alt?: string;\r\n    src?: string;\r\n    className?: string;\r\n    color?: string;\r\n    component?: OverridableComponent<any> /** Any component can override */;\r\n    target?: LinkTarget;\r\n    href?: string;\r\n    sx?: AvatarProps['sx'];\r\n    children?: React.ReactNode;\r\n    outline?: boolean;\r\n    size?: 'badge' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';\r\n}\r\n\r\nconst Avatar = ({ className, color, outline, size, sx, ...others }: avatarProps) => {\r\n    const theme = useTheme();\r\n\r\n    const colorSX = color && !outline && { color: theme.palette.background.paper, bgcolor: `${color}.main` };\r\n    const outlineSX = outline && {\r\n        color: color ? `${color}.main` : `primary.main`,\r\n        bgcolor: theme.palette.background.paper,\r\n        border: '2px solid',\r\n        borderColor: color ? `${color}.main` : `primary.main`\r\n    };\r\n    let sizeSX = {};\r\n    switch (size) {\r\n        case 'badge':\r\n            sizeSX = {\r\n                width: theme.spacing(3.5),\r\n                height: theme.spacing(3.5)\r\n            };\r\n            break;\r\n        case 'xs':\r\n            sizeSX = {\r\n                width: theme.spacing(4.25),\r\n                height: theme.spacing(4.25)\r\n            };\r\n            break;\r\n        case 'sm':\r\n            sizeSX = {\r\n                width: theme.spacing(5),\r\n                height: theme.spacing(5)\r\n            };\r\n            break;\r\n        case 'lg':\r\n            sizeSX = {\r\n                width: theme.spacing(9),\r\n                height: theme.spacing(9)\r\n            };\r\n            break;\r\n        case 'xl':\r\n            sizeSX = {\r\n                width: theme.spacing(10.25),\r\n                height: theme.spacing(10.25)\r\n            };\r\n            break;\r\n        case 'md':\r\n            sizeSX = {\r\n                width: theme.spacing(7.5),\r\n                height: theme.spacing(7.5)\r\n            };\r\n            break;\r\n        default:\r\n            sizeSX = {};\r\n    }\r\n\r\n    return <MuiAvatar sx={{ ...colorSX, ...outlineSX, ...sizeSX, ...sx }} {...others} />;\r\n};\r\n\r\nexport default Avatar;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nexport interface CardSecondaryActionProps {\r\n    title?: string;\r\n    link?: string;\r\n    icon?: React.ReactNode | string;\r\n}\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }: CardSecondaryActionProps) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport { alpha, getPath } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nimport linkClasses, { getLinkUtilityClass } from './linkClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\n\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const color = getPath(theme, `palette.${transformDeprecatedColors(ownerState.color)}`) || ownerState.color;\n  return _extends({}, ownerState.underline === 'none' && {\n    textDecoration: 'none'\n  }, ownerState.underline === 'hover' && {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  }, ownerState.underline === 'always' && {\n    textDecoration: 'underline',\n    textDecorationColor: color !== 'inherit' ? alpha(color, 0.4) : undefined,\n    '&:hover': {\n      textDecorationColor: 'inherit'\n    }\n  }, ownerState.component === 'button' && {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    MozAppearance: 'none',\n    // Reset\n    WebkitAppearance: 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    [`&.${linkClasses.focusVisible}`]: {\n      outline: 'auto'\n    }\n  });\n});\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef(ref, focusVisibleRef);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  const handleFocus = event => {\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, _extends({\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState: ownerState,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .any,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;"],"sourceRoot":""}