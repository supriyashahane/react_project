{"version":3,"sources":["../node_modules/@mui/material/ListSubheader/listSubheaderClasses.js","../node_modules/@mui/material/ListSubheader/ListSubheader.js","../node_modules/@mui/core/AutocompleteUnstyled/useAutocomplete.js","../node_modules/@mui/material/Autocomplete/autocompleteClasses.js","../node_modules/@mui/material/Autocomplete/Autocomplete.js"],"names":["getListSubheaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ListSubheaderRoot","styled","name","overridesResolver","props","styles","ownerState","root","color","capitalize","disableGutters","gutters","inset","disableSticky","sticky","theme","_extends","boxSizing","lineHeight","listStyle","palette","text","secondary","fontFamily","typography","fontWeight","fontWeightMedium","fontSize","pxToRem","primary","main","paddingLeft","paddingRight","position","top","zIndex","backgroundColor","background","paper","ListSubheader","React","inProps","ref","useThemeProps","className","component","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","stripDiacritics","string","normalize","replace","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","length","defaultFilterOptions","useAutocomplete","autoComplete","autoHighlight","autoSelect","blurOnSelect","disabledProp","disabled","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","isOptionEqualToValue","value","groupBy","handleHomeEndKeys","idProp","id","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","openOnFocus","selectOnFocus","valueProp","useId","optionLabel","String","ignoreFocus","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","useControlled","controlled","default","setValueState","state","setInputValueState","focused","setFocused","resetInputValue","event","newValue","newInputValue","prevValue","valueChange","current","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","focusTag","useEventCallback","tagToFocus","focus","querySelector","setHighlightedIndex","index","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","add","scrollHeight","clientHeight","element","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","direction","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","Math","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","push","splice","ctrlKey","metaKey","blur","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","reduce","acc","group","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart","getAutocompleteUtilityClass","_ClearIcon","_ArrowDropDownIcon","autocompleteClasses","AutocompleteRoot","fullWidth","hasClearIcon","hasPopupIcon","inputFocused","size","tag","inputRoot","clearIndicator","visibility","width","margin","maxWidth","flexWrap","minWidth","paddingBottom","padding","endAdornment","right","paddingTop","flexGrow","textOverflow","opacity","AutocompleteEndAdornment","AutocompleteClearIndicator","IconButton","marginRight","AutocompletePopupIndicator","popupIndicator","popupIndicatorOpen","transform","AutocompletePopper","Popper","popper","disablePortal","popperDisablePortal","modal","AutocompletePaper","Paper","body1","overflow","AutocompleteLoading","loading","AutocompleteNoOptions","noOptions","AutocompleteListbox","listbox","maxHeight","minHeight","display","justifyContent","alignItems","cursor","outline","WebkitTapHighlightColor","breakpoints","up","action","hover","disabledOpacity","pointerEvents","focusVisible","alpha","selectedOpacity","hoverOpacity","focusOpacity","AutocompleteGroupLabel","groupLabel","AutocompleteGroupUl","groupUl","Autocomplete","_componentsProps$clea","startAdornment","ChipProps","clearIcon","ClearIcon","clearText","closeText","componentsProps","forcePopupIcon","getLimitTagsText","more","limitTags","ListboxComponent","ListboxProps","loadingText","noOptionsText","openText","PaperComponent","PopperComponent","popupIcon","ArrowDropDownIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","getCustomizedTagProps","params","map","Chip","children","_jsxs","props2","renderListOption","optionProps","undefined","InputLabelProps","InputProps","title","inputProps","style","clientWidth","option2","index2"],"mappings":"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","file":"static/js/12.687da19c.chunk.js","sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getListSubheaderUtilityClass(slot) {\n  return generateUtilityClass('MuiListSubheader', slot);\n}\nconst listSubheaderClasses = generateUtilityClasses('MuiListSubheader', ['root', 'colorPrimary', 'colorInherit', 'gutters', 'inset', 'sticky']);\nexport default listSubheaderClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getListSubheaderUtilityClass } from './listSubheaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disableGutters,\n    inset,\n    disableSticky\n  } = ownerState;\n  const slots = {\n    root: ['root', color !== 'default' && `color${capitalize(color)}`, !disableGutters && 'gutters', inset && 'inset', !disableSticky && 'sticky']\n  };\n  return composeClasses(slots, getListSubheaderUtilityClass, classes);\n};\n\nconst ListSubheaderRoot = styled('li', {\n  name: 'MuiListSubheader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], !ownerState.disableGutters && styles.gutters, ownerState.inset && styles.inset, !ownerState.disableSticky && styles.sticky];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box',\n  lineHeight: '48px',\n  listStyle: 'none',\n  color: theme.palette.text.secondary,\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(14)\n}, ownerState.color === 'primary' && {\n  color: theme.palette.primary.main\n}, ownerState.color === 'inherit' && {\n  color: 'inherit'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.inset && {\n  paddingLeft: 72\n}, !ownerState.disableSticky && {\n  position: 'sticky',\n  top: 0,\n  zIndex: 1,\n  backgroundColor: theme.palette.background.paper\n}));\nconst ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiListSubheader'\n  });\n\n  const {\n    className,\n    color = 'default',\n    component = 'li',\n    disableGutters = false,\n    disableSticky = false,\n    inset = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disableGutters,\n    disableSticky,\n    inset\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListSubheaderRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'default'\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   * @default false\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader is indented.\n   * @default false\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default ListSubheader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { unstable_setRef as setRef, unstable_useEventCallback as useEventCallback, unstable_useControlled as useControlled, unstable_useId as useId } from '@mui/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getAutocompleteUtilityClass(slot) {\n  return generateUtilityClass('MuiAutocomplete', slot);\n}\nconst autocompleteClasses = generateUtilityClasses('MuiAutocomplete', ['root', 'fullWidth', 'focused', 'focusVisible', 'tag', 'tagSizeSmall', 'tagSizeMedium', 'hasPopupIcon', 'hasClearIcon', 'inputRoot', 'input', 'inputFocused', 'endAdornment', 'clearIndicator', 'popupIndicator', 'popupIndicatorOpen', 'popper', 'popperDisablePortal', 'paper', 'listbox', 'loading', 'noOptions', 'option', 'groupLabel', 'groupUl']);\nexport default autocompleteClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _ClearIcon, _ArrowDropDownIcon;\n\nconst _excluded = [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"className\", \"clearIcon\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeText\", \"componentsProps\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"isOptionEqualToValue\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes, integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useAutocomplete, createFilterOptions } from '@mui/core';\nimport { alpha } from '@mui/system';\nimport Popper from '../Popper';\nimport ListSubheader from '../ListSubheader';\nimport Paper from '../Paper';\nimport IconButton from '../IconButton';\nimport Chip from '../Chip';\nimport ClearIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport autocompleteClasses, { getAutocompleteUtilityClass } from './autocompleteClasses';\nimport capitalize from '../utils/capitalize';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused,\n    popupOpen,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', focused && 'focused', fullWidth && 'fullWidth', hasClearIcon && 'hasClearIcon', hasPopupIcon && 'hasPopupIcon'],\n    inputRoot: ['inputRoot'],\n    input: ['input', inputFocused && 'inputFocused'],\n    tag: ['tag', `tagSize${capitalize(size)}`],\n    endAdornment: ['endAdornment'],\n    clearIndicator: ['clearIndicator'],\n    popupIndicator: ['popupIndicator', popupOpen && 'popupIndicatorOpen'],\n    popper: ['popper', disablePortal && 'popperDisablePortal'],\n    paper: ['paper'],\n    listbox: ['listbox'],\n    loading: ['loading'],\n    noOptions: ['noOptions'],\n    option: ['option'],\n    groupLabel: ['groupLabel'],\n    groupUl: ['groupUl']\n  };\n  return composeClasses(slots, getAutocompleteUtilityClass, classes);\n};\n\nconst AutocompleteRoot = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      fullWidth,\n      hasClearIcon,\n      hasPopupIcon,\n      inputFocused,\n      size\n    } = ownerState;\n    return [{\n      [`& .${autocompleteClasses.tag}`]: styles.tag\n    }, {\n      [`& .${autocompleteClasses.tag}`]: styles[`tagSize${capitalize(size)}`]\n    }, {\n      [`& .${autocompleteClasses.inputRoot}`]: styles.inputRoot\n    }, {\n      [`& .${autocompleteClasses.input}`]: styles.input\n    }, {\n      [`& .${autocompleteClasses.input}`]: inputFocused && styles.inputFocused\n    }, styles.root, fullWidth && styles.fullWidth, hasPopupIcon && styles.hasPopupIcon, hasClearIcon && styles.hasClearIcon];\n  }\n})(({\n  ownerState\n}) => _extends({\n  [`&.${autocompleteClasses.focused} .${autocompleteClasses.clearIndicator}`]: {\n    visibility: 'visible'\n  },\n\n  /* Avoid double tap issue on iOS */\n  '@media (pointer: fine)': {\n    [`&:hover .${autocompleteClasses.clearIndicator}`]: {\n      visibility: 'visible'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${autocompleteClasses.tag}`]: _extends({\n    margin: 3,\n    maxWidth: 'calc(100% - 6px)'\n  }, ownerState.size === 'small' && {\n    margin: 2,\n    maxWidth: 'calc(100% - 4px)'\n  }),\n  [`& .${autocompleteClasses.inputRoot}`]: {\n    flexWrap: 'wrap',\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      width: 0,\n      minWidth: 30\n    }\n  },\n  '& .MuiInput-root': {\n    paddingBottom: 1,\n    '& .MuiInput-input': {\n      padding: '4px 4px 4px 0px'\n    }\n  },\n  '& .MuiInput-root.MuiInputBase-sizeSmall': {\n    '& .MuiInput-input': {\n      padding: '2px 4px 3px 0'\n    }\n  },\n  '& .MuiOutlinedInput-root': {\n    padding: 9,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '7.5px 4px 7.5px 6px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiOutlinedInput-root.MuiInputBase-sizeSmall': {\n    padding: 6,\n    [`& .${autocompleteClasses.input}`]: {\n      padding: '2.5px 4px 2.5px 6px'\n    }\n  },\n  '& .MuiFilledInput-root': {\n    paddingTop: 19,\n    paddingLeft: 8,\n    [`.${autocompleteClasses.hasPopupIcon}&, .${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 26 + 4 + 9\n    },\n    [`.${autocompleteClasses.hasPopupIcon}.${autocompleteClasses.hasClearIcon}&`]: {\n      paddingRight: 52 + 4 + 9\n    },\n    '& .MuiFilledInput-input': {\n      padding: '7px 4px'\n    },\n    [`& .${autocompleteClasses.endAdornment}`]: {\n      right: 9\n    }\n  },\n  '& .MuiFilledInput-root.MuiInputBase-sizeSmall': {\n    paddingBottom: 1,\n    '& .MuiFilledInput-input': {\n      padding: '2.5px 4px'\n    }\n  },\n  [`& .${autocompleteClasses.input}`]: _extends({\n    flexGrow: 1,\n    textOverflow: 'ellipsis',\n    opacity: 0\n  }, ownerState.inputFocused && {\n    opacity: 1\n  })\n}));\nconst AutocompleteEndAdornment = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'EndAdornment',\n  overridesResolver: (props, styles) => styles.endAdornment\n})({\n  // We use a position absolute to support wrapping tags.\n  position: 'absolute',\n  right: 0,\n  top: 'calc(50% - 14px)' // Center vertically\n\n});\nconst AutocompleteClearIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'ClearIndicator',\n  overridesResolver: (props, styles) => styles.clearIndicator\n})({\n  marginRight: -2,\n  padding: 4,\n  visibility: 'hidden'\n});\nconst AutocompletePopupIndicator = styled(IconButton, {\n  name: 'MuiAutocomplete',\n  slot: 'PopupIndicator',\n  overridesResolver: ({\n    ownerState\n  }, styles) => _extends({}, styles.popupIndicator, ownerState.popupOpen && styles.popupIndicatorOpen)\n})(({\n  ownerState\n}) => _extends({\n  padding: 2,\n  marginRight: -2\n}, ownerState.popupOpen && {\n  transform: 'rotate(180deg)'\n}));\nconst AutocompletePopper = styled(Popper, {\n  name: 'MuiAutocomplete',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${autocompleteClasses.option}`]: styles.option\n    }, styles.popper, ownerState.disablePortal && styles.popperDisablePortal];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  zIndex: theme.zIndex.modal\n}, ownerState.disablePortal && {\n  position: 'absolute'\n}));\nconst AutocompletePaper = styled(Paper, {\n  name: 'MuiAutocomplete',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => _extends({}, theme.typography.body1, {\n  overflow: 'auto'\n}));\nconst AutocompleteLoading = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Loading',\n  overridesResolver: (props, styles) => styles.loading\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteNoOptions = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'NoOptions',\n  overridesResolver: (props, styles) => styles.noOptions\n})(({\n  theme\n}) => ({\n  color: theme.palette.text.secondary,\n  padding: '14px 16px'\n}));\nconst AutocompleteListbox = styled('div', {\n  name: 'MuiAutocomplete',\n  slot: 'Listbox',\n  overridesResolver: (props, styles) => styles.listbox\n})(({\n  theme\n}) => ({\n  listStyle: 'none',\n  margin: 0,\n  padding: '8px 0',\n  maxHeight: '40vh',\n  overflow: 'auto',\n  [`& .${autocompleteClasses.option}`]: {\n    minHeight: 48,\n    display: 'flex',\n    overflow: 'hidden',\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    cursor: 'pointer',\n    paddingTop: 6,\n    boxSizing: 'border-box',\n    outline: '0',\n    WebkitTapHighlightColor: 'transparent',\n    paddingBottom: 6,\n    paddingLeft: 16,\n    paddingRight: 16,\n    [theme.breakpoints.up('sm')]: {\n      minHeight: 'auto'\n    },\n    [`&.${autocompleteClasses.focused}`]: {\n      backgroundColor: theme.palette.action.hover,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    '&[aria-disabled=\"true\"]': {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`&.${autocompleteClasses.focusVisible}`]: {\n      backgroundColor: theme.palette.action.focus\n    },\n    '&[aria-selected=\"true\"]': {\n      backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n      [`&.${autocompleteClasses.focused}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.action.selected\n        }\n      },\n      [`&.${autocompleteClasses.focusVisible}`]: {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n      }\n    }\n  }\n}));\nconst AutocompleteGroupLabel = styled(ListSubheader, {\n  name: 'MuiAutocomplete',\n  slot: 'GroupLabel',\n  overridesResolver: (props, styles) => styles.groupLabel\n})(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.background.paper,\n  top: -8\n}));\nconst AutocompleteGroupUl = styled('ul', {\n  name: 'MuiAutocomplete',\n  slot: 'GroupUl',\n  overridesResolver: (props, styles) => styles.groupUl\n})({\n  padding: 0,\n  [`& .${autocompleteClasses.option}`]: {\n    paddingLeft: 24\n  }\n});\nexport { createFilterOptions };\nconst Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(inProps, ref) {\n  var _componentsProps$clea;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiAutocomplete'\n  });\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    ChipProps,\n    className,\n    clearIcon = _ClearIcon || (_ClearIcon = /*#__PURE__*/_jsx(ClearIcon, {\n      fontSize: \"small\"\n    })),\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    clearText = 'Clear',\n    closeText = 'Close',\n    componentsProps = {},\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabled = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    disablePortal = false,\n    filterSelectedOptions = false,\n    forcePopupIcon = 'auto',\n    freeSolo = false,\n    fullWidth = false,\n    getLimitTagsText = more => `+${more}`,\n    getOptionLabel = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    includeInputInList = false,\n    limitTags = -1,\n    ListboxComponent = 'ul',\n    ListboxProps,\n    loading = false,\n    loadingText = 'Loading…',\n    multiple = false,\n    noOptionsText = 'No options',\n    openOnFocus = false,\n    openText = 'Open',\n    PaperComponent = Paper,\n    PopperComponent = Popper,\n    popupIcon = _ArrowDropDownIcon || (_ArrowDropDownIcon = /*#__PURE__*/_jsx(ArrowDropDownIcon, {})),\n    renderGroup: renderGroupProp,\n    renderInput,\n    renderOption: renderOptionProp,\n    renderTags,\n    selectOnFocus = !props.freeSolo,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n  /* eslint-enable @typescript-eslint/no-unused-vars */\n\n\n  const {\n    getRootProps,\n    getInputProps,\n    getInputLabelProps,\n    getPopupIndicatorProps,\n    getClearProps,\n    getTagProps,\n    getListboxProps,\n    getOptionProps,\n    value,\n    dirty,\n    id,\n    popupOpen,\n    focused,\n    focusedTag,\n    anchorEl,\n    setAnchorEl,\n    inputValue,\n    groupedOptions\n  } = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  }));\n  const hasClearIcon = !disableClearable && !disabled && dirty;\n  const hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n\n  const ownerState = _extends({}, props, {\n    disablePortal,\n    focused,\n    fullWidth,\n    hasClearIcon,\n    hasPopupIcon,\n    inputFocused: focusedTag === -1,\n    popupOpen,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let startAdornment;\n\n  if (multiple && value.length > 0) {\n    const getCustomizedTagProps = params => _extends({\n      className: clsx(classes.tag),\n      disabled\n    }, getTagProps(params));\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map((option, index) => /*#__PURE__*/_jsx(Chip, _extends({\n        label: getOptionLabel(option),\n        size: size\n      }, getCustomizedTagProps({\n        index\n      }), ChipProps)));\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    const more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/_jsx(\"span\", {\n        className: classes.tag,\n        children: getLimitTagsText(more)\n      }, startAdornment.length));\n    }\n  }\n\n  const defaultRenderGroup = params => /*#__PURE__*/_jsxs(\"li\", {\n    children: [/*#__PURE__*/_jsx(AutocompleteGroupLabel, {\n      className: classes.groupLabel,\n      ownerState: ownerState,\n      component: \"div\",\n      children: params.group\n    }), /*#__PURE__*/_jsx(AutocompleteGroupUl, {\n      className: classes.groupUl,\n      ownerState: ownerState,\n      children: params.children\n    })]\n  }, params.key);\n\n  const renderGroup = renderGroupProp || defaultRenderGroup;\n\n  const defaultRenderOption = (props2, option) => /*#__PURE__*/_jsx(\"li\", _extends({}, props2, {\n    children: getOptionLabel(option)\n  }));\n\n  const renderOption = renderOptionProp || defaultRenderOption;\n\n  const renderListOption = (option, index) => {\n    const optionProps = getOptionProps({\n      option,\n      index\n    });\n    return renderOption(_extends({}, optionProps, {\n      className: classes.option\n    }), option, {\n      selected: optionProps['aria-selected'],\n      inputValue\n    });\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(AutocompleteRoot, _extends({\n      ref: ref,\n      className: clsx(classes.root, className),\n      ownerState: ownerState\n    }, getRootProps(other), {\n      children: renderInput({\n        id,\n        disabled,\n        fullWidth: true,\n        size: size === 'small' ? 'small' : undefined,\n        InputLabelProps: getInputLabelProps(),\n        InputProps: {\n          ref: setAnchorEl,\n          className: classes.inputRoot,\n          startAdornment,\n          endAdornment: /*#__PURE__*/_jsxs(AutocompleteEndAdornment, {\n            className: classes.endAdornment,\n            ownerState: ownerState,\n            children: [hasClearIcon ? /*#__PURE__*/_jsx(AutocompleteClearIndicator, _extends({}, getClearProps(), {\n              \"aria-label\": clearText,\n              title: clearText,\n              ownerState: ownerState\n            }, componentsProps.clearIndicator, {\n              className: clsx(classes.clearIndicator, (_componentsProps$clea = componentsProps.clearIndicator) == null ? void 0 : _componentsProps$clea.className),\n              children: clearIcon\n            })) : null, hasPopupIcon ? /*#__PURE__*/_jsx(AutocompletePopupIndicator, _extends({}, getPopupIndicatorProps(), {\n              disabled: disabled,\n              \"aria-label\": popupOpen ? closeText : openText,\n              title: popupOpen ? closeText : openText,\n              className: clsx(classes.popupIndicator),\n              ownerState: ownerState,\n              children: popupIcon\n            })) : null]\n          })\n        },\n        inputProps: _extends({\n          className: clsx(classes.input),\n          disabled\n        }, getInputProps())\n      })\n    })), popupOpen && anchorEl ? /*#__PURE__*/_jsx(AutocompletePopper, {\n      as: PopperComponent,\n      className: clsx(classes.popper),\n      disablePortal: disablePortal,\n      style: {\n        width: anchorEl ? anchorEl.clientWidth : null\n      },\n      ownerState: ownerState,\n      role: \"presentation\",\n      anchorEl: anchorEl,\n      open: true,\n      children: /*#__PURE__*/_jsxs(AutocompletePaper, {\n        as: PaperComponent,\n        className: classes.paper,\n        ownerState: ownerState,\n        children: [loading && groupedOptions.length === 0 ? /*#__PURE__*/_jsx(AutocompleteLoading, {\n          className: classes.loading,\n          ownerState: ownerState,\n          children: loadingText\n        }) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/_jsx(AutocompleteNoOptions, {\n          className: classes.noOptions,\n          ownerState: ownerState,\n          role: \"presentation\",\n          onMouseDown: event => {\n            // Prevent input blur when interacting with the \"no options\" content\n            event.preventDefault();\n          },\n          children: noOptionsText\n        }) : null, groupedOptions.length > 0 ? /*#__PURE__*/_jsx(AutocompleteListbox, _extends({\n          as: ListboxComponent,\n          className: classes.listbox,\n          ownerState: ownerState\n        }, getListboxProps(), ListboxProps, {\n          children: groupedOptions.map((option, index) => {\n            if (groupBy) {\n              return renderGroup({\n                key: option.key,\n                group: option.group,\n                children: option.options.map((option2, index2) => renderListOption(option2, option.index + index2))\n              });\n            }\n\n            return renderListOption(option, index);\n          })\n        })) : null]\n      })\n    }) : null]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   * @default false\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   * @default false\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   * @default false\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   * @default false\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default clear icon.\n   * @default <ClearIcon fontSize=\"small\" />\n   */\n  clearIcon: PropTypes.node,\n\n  /**\n   * If `true`, the input's text is cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   * @default !props.freeSolo\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   * @default false\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Clear'\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Close'\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   * @default props.multiple ? [] : null\n   */\n  defaultValue: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.defaultValue !== undefined && !Array.isArray(props.defaultValue)) {\n      return new Error(['MUI: The Autocomplete expects the `defaultValue` prop to be an array when `multiple={true}` or undefined.', `However, ${props.defaultValue} was provided.`].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, the input can't be cleared.\n   * @default false\n   */\n  disableClearable: PropTypes.bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   * @default false\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   * @default false\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   * @default false\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the `Popper` content will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   * @default false\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   * @default 'auto'\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   * @default false\n   */\n  freeSolo: PropTypes.bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   * @default (more) => `+${more}`\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   * @default (option) => option.label ?? option\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   * @default !props.freeSolo\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide an id it will fall back to a randomly generated one.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   * @default false\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * Used to determine if the option represents the given value.\n   * Uses strict equality by default.\n   * ⚠️ Both arguments need to be handled, an option can only match with one value.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  isOptionEqualToValue: PropTypes.func,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   * @default -1\n   */\n  limitTags: integerPropType,\n\n  /**\n   * The component used to render the listbox.\n   * @default 'ul'\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   * This shows the `loadingText` in place of suggestions (only if there are no suggestions to show, e.g. `options` are empty).\n   * @default false\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Loading…'\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   * @default false\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'No options'\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"createOption\", \"selectOption\", \"removeOption\", \"blur\" or \"clear\".\n   * @param {string} [details]\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"selectOption\"`, `\"removeOption\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   * @default false\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Open'\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   * @default <ArrowDropDownIcon />\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {AutocompleteRenderGroupParams} params The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {object} props The props to apply on the li element.\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text is selected on focus.\n   * It helps the user clear the selected value.\n   * @default !props.freeSolo\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `isOptionEqualToValue` prop.\n   */\n  value: chainPropTypes(PropTypes.any, props => {\n    if (props.multiple && props.value !== undefined && !Array.isArray(props.value)) {\n      return new Error(['MUI: The Autocomplete expects the `value` prop to be an array when `multiple={true}` or undefined.', `However, ${props.value} was provided.`].join('\\n'));\n    }\n\n    return null;\n  })\n} : void 0;\nexport default Autocomplete;"],"sourceRoot":""}