{"version":3,"sources":["views/utilities/Animation.tsx","../node_modules/@mui/material/CardMedia/cardMediaClasses.js","../node_modules/@mui/material/CardMedia/CardMedia.js","assets/images/profile/img-profile-bg.png"],"names":["Animation","customization","useSelector","state","React","useState","type","setType","position","setPosition","direction","setDirection","animate","setAnimate","container","item","xs","title","justifyContent","spacing","sm","md","sx","mr","mb","variant","onClick","color","disabled","alignItems","checked","onChange","inputProps","in","content","border","boxShadow","component","image","borderRadius","overflow","getCardMediaUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardMediaRoot","styled","name","overridesResolver","props","styles","ownerState","isMediaComponent","isImageComponent","root","media","img","_extends","display","backgroundSize","backgroundRepeat","backgroundPosition","width","objectFit","MEDIA_COMPONENTS","IMAGE_COMPONENTS","CardMedia","inProps","ref","useThemeProps","children","className","src","style","other","_objectWithoutPropertiesLoose","indexOf","composedStyle","backgroundImage","classes","slots","composeClasses","useUtilityClasses","_jsx","clsx","as","role","undefined"],"mappings":"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","file":"static/js/153.679844be.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { Button, Box, CardMedia, Grid, Stack, Switch, Typography } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport Transitions from 'ui-component/extended/Transitions';\r\nimport { DefaultRootStateProps, Direction } from 'types';\r\n\r\n// assets\r\nimport image from 'assets/images/profile/img-profile-bg.png';\r\n\r\n// ==============================|| UTILITIES - ANIMATION ||============================== //\r\n\r\nconst Animation = () => {\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const [type, setType] = React.useState('grow');\r\n    const [position, setPosition] = React.useState('top-left');\r\n    const [direction, setDirection] = React.useState<Direction>('up');\r\n    const [animate, setAnimate] = React.useState(true);\r\n\r\n    return (\r\n        <Grid container>\r\n            <Grid item xs={12}>\r\n                <MainCard title=\"Basic Animation\">\r\n                    <Grid container justifyContent=\"center\" spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item sm={12} md={4}>\r\n                                    <SubCard title=\"Animation\" sx={{ '& .MuiButton-root': { mr: 2, mb: 2 } }}>\r\n                                        <Button variant={type === 'grow' ? 'contained' : 'outlined'} onClick={() => setType('grow')}>\r\n                                            Grow\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={type === 'collapse' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setType('collapse')}\r\n                                        >\r\n                                            Collapse\r\n                                        </Button>\r\n                                        <Button variant={type === 'fade' ? 'contained' : 'outlined'} onClick={() => setType('fade')}>\r\n                                            Fade\r\n                                        </Button>\r\n                                        <Button variant={type === 'slide' ? 'contained' : 'outlined'} onClick={() => setType('slide')}>\r\n                                            Slide\r\n                                        </Button>\r\n                                        <Button variant={type === 'zoom' ? 'contained' : 'outlined'} onClick={() => setType('zoom')}>\r\n                                            Zoom\r\n                                        </Button>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                                <Grid item sm={12} md={4}>\r\n                                    <SubCard title=\"Position (Grow & Zoom Animation)\" sx={{ '& .MuiButton-root': { mr: 2, mb: 2 } }}>\r\n                                        <Button\r\n                                            variant={position === 'top-left' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setPosition('top-left')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'grow' || type === 'zoom')}\r\n                                        >\r\n                                            Top Left (Default)\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={position === 'top' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setPosition('top')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'grow' || type === 'zoom')}\r\n                                        >\r\n                                            Top\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={position === 'top-right' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setPosition('top-right')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'grow' || type === 'zoom')}\r\n                                        >\r\n                                            Top Right\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={position === 'bottom-left' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setPosition('bottom-left')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'grow' || type === 'zoom')}\r\n                                        >\r\n                                            Bottom Left\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={position === 'bottom' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setPosition('bottom')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'grow' || type === 'zoom')}\r\n                                        >\r\n                                            Bottom\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={position === 'bottom-right' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setPosition('bottom-right')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'grow' || type === 'zoom')}\r\n                                        >\r\n                                            Bottom Right\r\n                                        </Button>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                                <Grid item sm={12} md={4}>\r\n                                    <SubCard title=\"Direction (Slide Animation)\" sx={{ '& .MuiButton-root': { mr: 2, mb: 2 } }}>\r\n                                        <Button\r\n                                            variant={direction === 'up' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setDirection('up')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'slide')}\r\n                                        >\r\n                                            Up\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={direction === 'down' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setDirection('down')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'slide')}\r\n                                        >\r\n                                            Down\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={direction === 'right' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setDirection('right')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'slide')}\r\n                                        >\r\n                                            Right\r\n                                        </Button>\r\n                                        <Button\r\n                                            variant={direction === 'left' ? 'contained' : 'outlined'}\r\n                                            onClick={() => setDirection('left')}\r\n                                            color=\"secondary\"\r\n                                            disabled={!(type === 'slide')}\r\n                                        >\r\n                                            Left\r\n                                        </Button>\r\n                                    </SubCard>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={9}>\r\n                            <Stack spacing={3} alignItems=\"center\">\r\n                                <Box>\r\n                                    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\r\n                                        <Typography variant={animate ? 'h5' : 'body1'}>IN</Typography>\r\n                                        <Switch\r\n                                            checked={animate}\r\n                                            onChange={() => setAnimate(!animate)}\r\n                                            inputProps={{ 'aria-label': 'controlled' }}\r\n                                        />\r\n                                        <Typography variant={!animate ? 'h5' : 'body1'}>OUT</Typography>\r\n                                    </Stack>\r\n                                </Box>\r\n                                <Transitions type={type} in={animate} position={position} direction={direction}>\r\n                                    <MainCard content={false} border={false} boxShadow>\r\n                                        <CardMedia\r\n                                            component=\"img\"\r\n                                            image={image}\r\n                                            title=\"Animation Content\"\r\n                                            sx={{ borderRadius: `${customization.borderRadius}px`, overflow: 'hidden' }}\r\n                                        />\r\n                                    </MainCard>\r\n                                </Transitions>\r\n                            </Stack>\r\n                        </Grid>\r\n                    </Grid>\r\n                </MainCard>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default Animation;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/core';\nexport function getCardMediaUtilityClass(slot) {\n  return generateUtilityClass('MuiCardMedia', slot);\n}\nconst cardMediaClasses = generateUtilityClasses('MuiCardMedia', ['root', 'media', 'img']);\nexport default cardMediaClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"image\", \"src\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/core';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport { getCardMediaUtilityClass } from './cardMediaClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    isMediaComponent,\n    isImageComponent\n  } = ownerState;\n  const slots = {\n    root: ['root', isMediaComponent && 'media', isImageComponent && 'img']\n  };\n  return composeClasses(slots, getCardMediaUtilityClass, classes);\n};\n\nconst CardMediaRoot = styled('div', {\n  name: 'MuiCardMedia',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      isMediaComponent,\n      isImageComponent\n    } = ownerState;\n    return [styles.root, isMediaComponent && styles.media, isImageComponent && styles.img];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'block',\n  backgroundSize: 'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center'\n}, ownerState.isMediaComponent && {\n  width: '100%'\n}, ownerState.isImageComponent && {\n  // ⚠️ object-fit is not supported by IE11.\n  objectFit: 'cover'\n}));\nconst MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nconst IMAGE_COMPONENTS = ['picture', 'img'];\nconst CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardMedia'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    image,\n    src,\n    style\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const isMediaComponent = MEDIA_COMPONENTS.indexOf(component) !== -1;\n  const composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: `url(\"${image}\")`\n  }, style) : style;\n\n  const ownerState = _extends({}, props, {\n    component,\n    isMediaComponent,\n    isImageComponent: IMAGE_COMPONENTS.indexOf(component) !== -1\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardMediaRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    role: !isMediaComponent && image ? 'image' : undefined,\n    ref: ref,\n    style: composedStyle,\n    ownerState: ownerState,\n    src: isMediaComponent ? image || src : undefined\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, props => {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('MUI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardMedia;","export default __webpack_public_path__ + \"static/media/img-profile-bg.2b15e931.png\";"],"sourceRoot":""}