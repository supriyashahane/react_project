{"version":3,"sources":["views/ui-elements/advance/UIDialog/SimpleDialog.tsx","views/ui-elements/advance/UIDialog/AlertDialog.tsx","views/ui-elements/advance/UIDialog/AlertDialogSlide.tsx","views/ui-elements/advance/UIDialog/FormDialog.tsx","views/ui-elements/advance/UIDialog/CustomizedDialogs.tsx","views/ui-elements/advance/UIDialog/FullScreenDialog.tsx","views/ui-elements/advance/UIDialog/MaxWidthDialog.tsx","views/ui-elements/advance/UIDialog/ResponsiveDialog.tsx","views/ui-elements/advance/UIDialog/DraggableDialog.tsx","views/ui-elements/advance/UIDialog/ScrollDialog.tsx","views/ui-elements/advance/UIDialog/ConfirmationDialog.tsx","views/ui-elements/advance/UIDialog/index.tsx","ui-component/cards/CardSecondaryAction.tsx"],"names":["avatarImage","require","emails","email","avatar","SimpleDialog","props","onClose","selectedValue","open","handleListItemClick","value","Dialog","DialogTitle","style","cursor","id","Card","CardContent","sx","pt","List","map","item","index","Fragment","ListItemButton","onClick","ListItemAvatar","Avatar","alt","src","default","ListItemText","primary","Divider","autoFocus","width","height","border","color","borderColor","bgcolor","SimpleDialogDemo","React","useState","setOpen","setSelectedValue","Button","variant","AlertDialog","theme","useTheme","handleClose","p","DialogContent","DialogContentText","Typography","component","DialogActions","pr","palette","error","dark","size","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","label","type","fullWidth","BootstrapDialog","styled","padding","spacing","BootstrapDialogTitle","children","other","m","IconButton","position","right","top","grey","CustomizedDialogs","dividers","gutterBottom","FullScreenDialog","fullScreen","AppBar","Toolbar","edge","ml","flex","secondary","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","Box","noValidate","display","flexDirection","FormControl","mt","minWidth","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useMediaQuery","breakpoints","down","PaperComponent","handle","cancel","Paper","DraggableDialog","ScrollDialog","scroll","setScroll","handleClickOpen","scrollType","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Grid","container","options","ConfirmationDialogRaw","_onClose","valueProp","setValue","radioGroupRef","TransitionProps","onEntering","RadioGroup","option","Radio","ConfirmationDialog","role","divider","disabled","maxHeight","newValue","UIDialog","MainCard","title","link","gridSpacing","xs","sm","md","SubCard","justifyContent","CardSecondaryAction","icon","placement","disableRipple","Link","href","outline","viewBox","fill","xmlns","clipPath","d","main","transform"],"mappings":"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","file":"static/js/155.a4c9da17.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    CardContent,\r\n    Dialog,\r\n    DialogTitle,\r\n    Divider,\r\n    List,\r\n    ListItemButton,\r\n    ListItemAvatar,\r\n    ListItemText\r\n} from '@mui/material';\r\n\r\n// assets\r\nimport AddIcon from '@mui/icons-material/Add';\r\n\r\nconst avatarImage = require.context('assets/images/profile', true);\r\n\r\n// alert user data\r\nconst emails = [\r\n    {\r\n        email: 'username@company.com',\r\n        avatar: 'user-1.png'\r\n    },\r\n    {\r\n        email: 'user02@company.com',\r\n        avatar: 'user-2.png'\r\n    }\r\n];\r\n\r\n// ===============================|| DIALOG ||=============================== //\r\n\r\nexport interface SimpleDialogProps {\r\n    onClose: (s: string) => void;\r\n    selectedValue: string;\r\n    open: boolean;\r\n}\r\n\r\nfunction SimpleDialog(props: SimpleDialogProps) {\r\n    const { onClose, selectedValue, open } = props;\r\n    const handleClose = () => {\r\n        onClose(selectedValue);\r\n    };\r\n\r\n    const handleListItemClick = (value: string) => {\r\n        onClose(value);\r\n    };\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n            <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                User Account\r\n            </DialogTitle>\r\n            <Card>\r\n                <CardContent sx={{ pt: 0 }}>\r\n                    <List>\r\n                        {emails.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                <ListItemButton onClick={() => handleListItemClick(item.email)}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt=\"User 1\" src={avatarImage(`./${item.avatar}`).default} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={item.email} />\r\n                                </ListItemButton>\r\n                                <Divider />\r\n                            </React.Fragment>\r\n                        ))}\r\n\r\n                        <ListItemButton autoFocus onClick={() => handleListItemClick('addAccount')}>\r\n                            <ListItemAvatar>\r\n                                <Avatar\r\n                                    sx={{\r\n                                        width: 32,\r\n                                        height: 32,\r\n                                        border: '2px solid',\r\n                                        color: 'grey.500',\r\n                                        borderColor: 'grey.500',\r\n                                        bgcolor: 'transparent'\r\n                                    }}\r\n                                >\r\n                                    <AddIcon />\r\n                                </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary=\"Add New Account\" />\r\n                        </ListItemButton>\r\n                    </List>\r\n                </CardContent>\r\n            </Card>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n// ===============================|| UI DIALOG - SIMPLE ||=============================== //\r\n\r\nexport default function SimpleDialogDemo() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [selectedValue, setSelectedValue] = React.useState(emails[0].email);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (value: string) => {\r\n        setOpen(false);\r\n        setSelectedValue(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"contained\" onClick={handleClickOpen}>\r\n                Open simple dialog\r\n            </Button>\r\n            <SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography } from '@mui/material';\r\n\r\n// ===============================|| UI DIALOG - SWEET ALERT ||=============================== //\r\n\r\nexport default function AlertDialog() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                sx={{ p: 3 }}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">Use Google&apos;s location service?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n                            are running.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button\r\n                        sx={{ color: theme.palette.error.dark, borderColor: theme.palette.error.dark }}\r\n                        onClick={handleClose}\r\n                        color=\"secondary\"\r\n                    >\r\n                        Disagree\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose} autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide, Typography, SlideProps } from '@mui/material';\r\n\r\n// animation\r\nconst Transition = React.forwardRef((props: SlideProps, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\n// ===============================|| UI DIALOG - SLIDE ANIMATION ||=============================== //\r\n\r\nexport default function AlertDialogSlide() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Slide in alert dialog\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title1\"\r\n                aria-describedby=\"alert-dialog-slide-description1\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title1\">Use Google&apos;s location service?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description1\">\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n                            are running.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button\r\n                        sx={{ color: theme.palette.error.dark, borderColor: theme.palette.error.dark }}\r\n                        onClick={handleClose}\r\n                        color=\"secondary\"\r\n                    >\r\n                        Disagree\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Typography } from '@mui/material';\r\n\r\n// ===============================|| UI DIALOG - FORMS ||=============================== //\r\n\r\nexport default function FormDialog() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open form dialog\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n                            are running.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                    <TextField autoFocus size=\"small\" id=\"name\" label=\"Email Address\" type=\"email\" fullWidth />\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button sx={{ color: theme.palette.error.dark }} onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { styled } from '@mui/material/styles';\r\nimport { Button, Dialog, IconButton, Typography } from '@mui/material';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuDialogContent-root': {\r\n        padding: theme.spacing(2)\r\n    },\r\n    '& .MuDialogActions-root': {\r\n        padding: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n    id: string;\r\n    children?: React.ReactNode;\r\n    onClose: () => void;\r\n}\r\n\r\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\r\n    const { children, onClose, ...other } = props;\r\n\r\n    return (\r\n        <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n            {children}\r\n            {onClose ? (\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    onClick={onClose}\r\n                    sx={{\r\n                        position: 'absolute',\r\n                        right: 10,\r\n                        top: 10,\r\n                        color: (theme) => theme.palette.grey[500]\r\n                    }}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ) : null}\r\n        </DialogTitle>\r\n    );\r\n};\r\n\r\nexport default function CustomizedDialogs() {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open dialog\r\n            </Button>\r\n            <BootstrapDialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n                <BootstrapDialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n                    Modal title\r\n                </BootstrapDialogTitle>\r\n                <DialogContent dividers>\r\n                    <Typography gutterBottom>\r\n                        Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi\r\n                        leo risus, porta ac consectetur ac, vestibulum at eros.\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                        Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum\r\n                        faucibus dolor auctor.\r\n                    </Typography>\r\n                    <Typography gutterBottom>\r\n                        Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et.\r\n                        Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.\r\n                    </Typography>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button autoFocus onClick={handleClose}>\r\n                        Save changes\r\n                    </Button>\r\n                </DialogActions>\r\n            </BootstrapDialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport {\r\n    AppBar,\r\n    Button,\r\n    Dialog,\r\n    Divider,\r\n    IconButton,\r\n    ListItemText,\r\n    ListItemButton,\r\n    List,\r\n    Slide,\r\n    SlideProps,\r\n    Toolbar,\r\n    Typography\r\n} from '@mui/material';\r\n\r\n// assets\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\n// slide animation\r\nconst Transition = React.forwardRef((props: SlideProps, ref) => <Slide direction=\"up\" ref={ref} {...props} />);\r\n\r\n// ===============================|| UI DIALOG - FULL SCREEN ||=============================== //\r\n\r\nexport default function FullScreenDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open full-screen dialog\r\n            </Button>\r\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n                <AppBar sx={{ position: 'relative' }}>\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\" size=\"large\">\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n                        <Typography variant=\"h3\" color=\"inherit\" sx={{ ml: 2, flex: 1 }}>\r\n                            Sound\r\n                        </Typography>\r\n                        <Button autoFocus color=\"inherit\" onClick={handleClose}>\r\n                            SAVE\r\n                        </Button>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <List>\r\n                    <ListItemButton>\r\n                        <ListItemText\r\n                            primary={<Typography variant=\"subtitle1\">Phone Ringtone</Typography>}\r\n                            secondary={<Typography variant=\"caption\">Titania</Typography>}\r\n                        />\r\n                    </ListItemButton>\r\n                    <Divider />\r\n                    <ListItemButton>\r\n                        <ListItemText\r\n                            primary={<Typography variant=\"subtitle1\">Default Notification Ringtone</Typography>}\r\n                            secondary={<Typography variant=\"caption\">Tethys</Typography>}\r\n                        />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                        <ListItemText\r\n                            primary={<Typography variant=\"subtitle1\">Phone Ringtone</Typography>}\r\n                            secondary={<Typography variant=\"caption\">Titania</Typography>}\r\n                        />\r\n                    </ListItemButton>\r\n                    <Divider />\r\n                    <ListItemButton>\r\n                        <ListItemText\r\n                            primary={<Typography variant=\"subtitle1\">Default Notification Ringtone</Typography>}\r\n                            secondary={<Typography variant=\"caption\">Tethys</Typography>}\r\n                        />\r\n                    </ListItemButton>\r\n                </List>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\nimport {\r\n    Box,\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogContentText,\r\n    DialogProps,\r\n    DialogTitle,\r\n    FormControl,\r\n    FormControlLabel,\r\n    InputLabel,\r\n    MenuItem,\r\n    Select,\r\n    SelectChangeEvent,\r\n    Switch\r\n} from '@mui/material';\r\n\r\nexport default function MaxWidthDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [fullWidth, setFullWidth] = React.useState(true);\r\n    const [maxWidth, setMaxWidth] = React.useState<DialogProps['maxWidth']>('sm');\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleMaxWidthChange = (event: SelectChangeEvent<typeof maxWidth>) => {\r\n        setMaxWidth(\r\n            // @ts-expect-error autofill of arbitrary value is not handled.\r\n            event.target.value\r\n        );\r\n    };\r\n\r\n    const handleFullWidthChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFullWidth(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open max-width dialog\r\n            </Button>\r\n            <Dialog fullWidth={fullWidth} maxWidth={maxWidth} open={open} onClose={handleClose}>\r\n                <DialogTitle>Optional sizes</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>You can set my maximum width and whether to adapt or not.</DialogContentText>\r\n                    <Box\r\n                        noValidate\r\n                        component=\"form\"\r\n                        sx={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            m: 'auto',\r\n                            width: 'fit-content'\r\n                        }}\r\n                    >\r\n                        <FormControl sx={{ mt: 2, minWidth: 120 }}>\r\n                            <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n                            <Select\r\n                                autoFocus\r\n                                value={maxWidth}\r\n                                onChange={handleMaxWidthChange}\r\n                                label=\"maxWidth\"\r\n                                inputProps={{\r\n                                    name: 'max-width',\r\n                                    id: 'max-width'\r\n                                }}\r\n                            >\r\n                                <MenuItem value={false as any}>false</MenuItem>\r\n                                <MenuItem value=\"xs\">xs</MenuItem>\r\n                                <MenuItem value=\"sm\">sm</MenuItem>\r\n                                <MenuItem value=\"md\">md</MenuItem>\r\n                                <MenuItem value=\"lg\">lg</MenuItem>\r\n                                <MenuItem value=\"xl\">xl</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControlLabel\r\n                            sx={{ mt: 1 }}\r\n                            control={<Switch checked={fullWidth} onChange={handleFullWidthChange} />}\r\n                            label=\"Full width\"\r\n                        />\r\n                    </Box>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose}>Close</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Typography, useMediaQuery } from '@mui/material';\r\n\r\n// ===============================|| UI DIALOG - RESPONSIVE ||=============================== //\r\n\r\nexport default function ResponsiveDialog() {\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open responsive dialog\r\n            </Button>\r\n            <Dialog fullScreen={fullScreen} open={open} onClose={handleClose} aria-labelledby=\"responsive-dialog-title\">\r\n                <DialogTitle id=\"responsive-dialog-title\">Use Google&apos;s location service?</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            Let Google help apps determine location. This means sending anonymous location data to Google, even when no apps\r\n                            are running.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5 }}>\r\n                    <Button sx={{ color: theme.palette.error.dark }} autoFocus onClick={handleClose} color=\"secondary\">\r\n                        Disagree\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose} autoFocus>\r\n                        Agree\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Paper, Typography, PaperProps } from '@mui/material';\r\n\r\n// third party\r\nimport Draggable from 'react-draggable';\r\n\r\n// draggable\r\nfunction PaperComponent(props: PaperProps) {\r\n    return (\r\n        <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\n\r\n// ===============================|| UI DIALOG - DRAGGABLE ||=============================== //\r\n\r\nexport default function DraggableDialog() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n                Open Draggable Dialog\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} PaperComponent={PaperComponent} aria-labelledby=\"draggable-dialog-title\">\r\n                <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                    Subscribe\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        <Typography variant=\"body2\" component=\"span\">\r\n                            To subscribe to this website, please enter your email address here. We will send updates occasionally.\r\n                        </Typography>\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button sx={{ color: theme.palette.error.dark }} autoFocus onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Typography } from '@mui/material';\r\n\r\n// ===============================|| UI DIALOG - SCROLLABLE ||=============================== //\r\n\r\nexport type scrollType = 'body' | 'paper' | undefined;\r\n\r\nexport default function ScrollDialog() {\r\n    const theme = useTheme();\r\n    const [open, setOpen] = React.useState(false);\r\n    const [scroll, setScroll] = React.useState<scrollType>('paper');\r\n\r\n    const handleClickOpen = (scrollType: scrollType) => () => {\r\n        setOpen(true);\r\n        setScroll(scrollType);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const descriptionElementRef: React.Ref<HTMLSelectElement> = React.useRef(null);\r\n    React.useEffect(() => {\r\n        if (open) {\r\n            const { current: descriptionElement } = descriptionElementRef;\r\n            if (descriptionElement !== null) {\r\n                descriptionElement?.focus();\r\n            }\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleClickOpen('paper')}>Content Scroll</Button>\r\n            <Button onClick={handleClickOpen('body')}>Body Scroll</Button>\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                scroll={scroll}\r\n                aria-labelledby=\"scroll-dialog-title\"\r\n                aria-describedby=\"scroll-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\r\n                <DialogContent dividers={scroll === 'paper'}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Typography variant=\"body2\">\r\n                                {' '}\r\n                                Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget\r\n                                quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Praesent commodo cursus magna, vel\r\n                                scelerisque nisl consectetur et.\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </DialogContent>\r\n                <DialogActions sx={{ pr: 2.5, pt: 2.5 }}>\r\n                    <Button sx={{ color: theme.palette.error.dark }} onClick={handleClose} color=\"secondary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" onClick={handleClose}>\r\n                        Subscribe\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","import * as React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    FormControlLabel,\r\n    List,\r\n    ListItemButton,\r\n    ListItemText,\r\n    Radio,\r\n    RadioGroup,\r\n    Typography\r\n} from '@mui/material';\r\n\r\nimport { DialogProps } from '@mui/material/Dialog';\r\n\r\n// select options\r\nconst options = [\r\n    'None',\r\n    'Atria',\r\n    'Callisto',\r\n    'Dione',\r\n    'Ganymede',\r\n    'Hangouts Call',\r\n    'Luna',\r\n    'Oberon',\r\n    'Phobos',\r\n    'Pyxis',\r\n    'Sedna',\r\n    'Titania',\r\n    'Triton',\r\n    'Umbriel'\r\n];\r\n\r\n// ===============================|| SELECTION ROW ||=============================== //\r\n\r\nexport interface ConfirmationDialogRawProps extends DialogProps {\r\n    _onClose: (v?: string) => void;\r\n    value: string;\r\n    valueProp?: string;\r\n    open: boolean;\r\n}\r\n\r\nfunction ConfirmationDialogRaw(props: ConfirmationDialogRawProps) {\r\n    const theme = useTheme();\r\n    const { _onClose, value: valueProp, open, ...other } = props;\r\n    const [value, setValue] = React.useState(valueProp);\r\n    const radioGroupRef: React.Ref<HTMLSelectElement> = React.useRef(null);\r\n\r\n    React.useEffect(() => {\r\n        if (!open) {\r\n            setValue(valueProp);\r\n        }\r\n    }, [valueProp, open]);\r\n\r\n    const handleEntering = () => {\r\n        if (radioGroupRef.current != null) {\r\n            radioGroupRef.current?.focus();\r\n        }\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        _onClose();\r\n    };\r\n\r\n    const handleOk = () => {\r\n        _onClose(value);\r\n    };\r\n\r\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            maxWidth=\"xs\"\r\n            TransitionProps={{ onEntering: handleEntering }}\r\n            aria-labelledby=\"confirmation-dialog-title\"\r\n            open={open}\r\n            {...other}\r\n        >\r\n            <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n            <DialogContent dividers>\r\n                <RadioGroup ref={radioGroupRef} aria-label=\"ringtone\" name=\"ringtone\" value={value} onChange={handleChange}>\r\n                    {options.map((option) => (\r\n                        <FormControlLabel value={option} key={option} control={<Radio />} label={option} />\r\n                    ))}\r\n                </RadioGroup>\r\n            </DialogContent>\r\n            <DialogActions sx={{ pr: 2.5, pt: 2.5 }}>\r\n                <Button sx={{ color: theme.palette.error.dark }} autoFocus color=\"secondary\" onClick={handleCancel}>\r\n                    Cancel\r\n                </Button>\r\n                <Button variant=\"contained\" size=\"small\" onClick={handleOk}>\r\n                    Done\r\n                </Button>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\n// ===============================|| UI DIALOG - CONFIRMATION ||=============================== //\r\n\r\nexport default function ConfirmationDialog() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [value, setValue] = React.useState('Hangouts Call');\r\n\r\n    const handleClickListItem = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (newValue: string | undefined) => {\r\n        setOpen(false);\r\n\r\n        if (newValue) {\r\n            setValue(newValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <List component=\"div\" role=\"group\">\r\n                <ListItemButton divider disabled>\r\n                    <ListItemText primary={<Typography variant=\"subtitle1\">Interruptions</Typography>} />\r\n                </ListItemButton>\r\n                <ListItemButton\r\n                    divider\r\n                    aria-haspopup=\"true\"\r\n                    aria-controls=\"ringtone-menu\"\r\n                    aria-label=\"phone ringtone\"\r\n                    onClick={handleClickListItem}\r\n                >\r\n                    <ListItemText\r\n                        primary={<Typography variant=\"subtitle1\">Phone Ringtone</Typography>}\r\n                        secondary={<Typography variant=\"caption\">{value}</Typography>}\r\n                    />\r\n                </ListItemButton>\r\n                <ListItemButton divider disabled>\r\n                    <ListItemText\r\n                        primary={<Typography variant=\"subtitle1\">Default Notification Ringtone</Typography>}\r\n                        secondary={<Typography variant=\"caption\">Tethys</Typography>}\r\n                    />\r\n                </ListItemButton>\r\n                <ConfirmationDialogRaw\r\n                    sx={{\r\n                        width: '80%',\r\n                        maxHeight: 435\r\n                    }}\r\n                    id=\"ringtone-menu\"\r\n                    keepMounted\r\n                    open={open}\r\n                    _onClose={handleClose}\r\n                    value={value}\r\n                />\r\n            </List>\r\n        </div>\r\n    );\r\n}\r\n","// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport SimpleDialogDemo from './SimpleDialog';\r\nimport AlertDialog from './AlertDialog';\r\nimport AlertDialogSlide from './AlertDialogSlide';\r\nimport FormDialog from './FormDialog';\r\nimport CustomizedDialogs from './CustomizedDialogs';\r\nimport FullScreenDialog from './FullScreenDialog';\r\nimport MaxWidthDialog from './MaxWidthDialog';\r\nimport ResponsiveDialog from './ResponsiveDialog';\r\nimport DraggableDialog from './DraggableDialog';\r\nimport ScrollDialog from './ScrollDialog';\r\nimport ConfirmationDialog from './ConfirmationDialog';\r\n\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport SubCard from 'ui-component/cards/SubCard';\r\nimport SecondaryAction from 'ui-component/cards/CardSecondaryAction';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// ===============================|| UI DIALOG ||=============================== //\r\n\r\nconst UIDialog = () => (\r\n    <MainCard title=\"Dialog\" secondary={<SecondaryAction link=\"https://next.material-ui.com/components/dialogs/\" />}>\r\n        <Grid container spacing={gridSpacing}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Simple Dialog\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <SimpleDialogDemo />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Sweet Alert\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <AlertDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Dialog Animation\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <AlertDialogSlide />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Form Dialogs\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <FormDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Customized Dialogs\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <CustomizedDialogs />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Full Screen Dialogs\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <FullScreenDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Dialogs Size\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <MaxWidthDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Responsive Fullscreen Dialogs\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <ResponsiveDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Draggable Dialogs\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <DraggableDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Scrolling Dialogs\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <ScrollDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n                <SubCard title=\"Confirmation Dialogs\">\r\n                    <Grid container justifyContent=\"center\">\r\n                        <ConfirmationDialog />\r\n                    </Grid>\r\n                </SubCard>\r\n            </Grid>\r\n        </Grid>\r\n    </MainCard>\r\n);\r\n\r\nexport default UIDialog;\r\n","import React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { ButtonBase, Link, Tooltip } from '@mui/material';\r\n\r\n// project imports\r\nimport Avatar from '../extended/Avatar';\r\n\r\n// ==============================|| CARD SECONDARY ACTION ||============================== //\r\n\r\nexport interface CardSecondaryActionProps {\r\n    title?: string;\r\n    link?: string;\r\n    icon?: React.ReactNode | string;\r\n}\r\n\r\nconst CardSecondaryAction = ({ title, link, icon }: CardSecondaryActionProps) => {\r\n    const theme = useTheme();\r\n\r\n    return (\r\n        <Tooltip title={title || 'Reference'} placement=\"left\">\r\n            <ButtonBase disableRipple>\r\n                {!icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" alt=\"MUI Logo\" size=\"badge\" color=\"primary\" outline>\r\n                        <svg width=\"500\" height=\"500\" viewBox=\"0 0 500 500\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <g clipPath=\"url(#clip0)\">\r\n                                <path\r\n                                    d=\"M100 260.9V131L212.5 195.95V239.25L137.5 195.95V282.55L100 260.9Z\"\r\n                                    fill={theme.palette.primary[800]}\r\n                                />\r\n                                <path\r\n                                    d=\"M212.5 195.95L325 131V260.9L250 304.2L212.5 282.55L287.5 239.25V195.95L212.5 239.25V195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                                <path d=\"M212.5 282.55V325.85L287.5 369.15V325.85L212.5 282.55Z\" fill={theme.palette.primary[800]} />\r\n                                <path\r\n                                    d=\"M287.5 369.15L400 304.2V217.6L362.5 239.25V282.55L287.5 325.85V369.15ZM362.5 195.95V152.65L400 131V174.3L362.5 195.95Z\"\r\n                                    fill={theme.palette.primary.main}\r\n                                />\r\n                            </g>\r\n                            <defs>\r\n                                <clipPath id=\"clip0\">\r\n                                    <rect width=\"300\" height=\"238.3\" fill=\"white\" transform=\"translate(100 131)\" />\r\n                                </clipPath>\r\n                            </defs>\r\n                        </svg>\r\n                    </Avatar>\r\n                )}\r\n                {icon && (\r\n                    <Avatar component={Link} href={link} target=\"_blank\" size=\"badge\" color=\"primary\" outline>\r\n                        {icon}\r\n                    </Avatar>\r\n                )}\r\n            </ButtonBase>\r\n        </Tooltip>\r\n    );\r\n};\r\n\r\nexport default CardSecondaryAction;\r\n"],"sourceRoot":""}