{"version":3,"sources":["views/forms/chart/Apexchart/ApexAreaChart.tsx","views/forms/chart/Apexchart/ApexBarChart.tsx","views/forms/chart/Apexchart/ApexColumnChart.tsx","views/forms/chart/Apexchart/ApexLineChart.tsx","views/forms/chart/Apexchart/ApexMixedChart.tsx","views/forms/chart/Apexchart/ApexPieChart.tsx","views/forms/chart/Apexchart/ApexPolarChart.tsx","views/forms/chart/Apexchart/ApexRedialChart.tsx","views/forms/chart/Apexchart/index.tsx"],"names":["areaChartOptions","chart","height","type","colors","value","secondaryMain","primaryMain","dataLabels","enabled","stroke","curve","xaxis","categories","tooltip","x","format","legend","show","fontSize","fontFamily","position","offsetX","offsetY","labels","useSeriesColors","markers","width","radius","itemMargin","horizontal","vertical","ApexAreaChart","theme","useTheme","navType","useSelector","state","customization","primary","palette","text","darkLight","dark","light","grey200","grey","useState","name","data","series","options","setOptions","React","useEffect","prevState","secondary","main","style","yaxis","grid","borderColor","id","barChartOptions","plotOptions","bar","borderRadius","ApexBarChart","successDark","success","columnChartOptions","columnWidth","endingShape","title","fill","opacity","y","formatter","val","responsive","breakpoint","ApexColumnChart","lineChartOptions","zoom","ApexLineChart","mixedChartOptions","stacked","axisTicks","axisBorder","color","seriesName","opposite","fixed","ApexMixedChart","pieChartOptions","ApexPieChart","backColor","background","paper","error","warningDark","warning","orangeDark","orange","polarChartOptions","ApexPolarChart","polarArea","rings","strokeColor","spokes","connectorColors","redialBarChartOptions","radialBar","startAngle","endAngle","hollow","margin","size","image","undefined","floating","opts","w","globals","seriesIndex","ApexRedialBarChart","props","track","Apexchart","Grid","container","spacing","gridSpacing","item","xs","md","lg","MainCard","xl"],"mappings":"0QAcMA,EAAmB,CACrBC,MAAO,CACHC,OAAQ,IACRC,KAAM,QAEVC,OAAQ,CAACC,IAAMC,cAAeD,IAAME,aACpCC,WAAY,CACRC,SAAS,GAEbC,OAAQ,CACJC,MAAO,UAEXC,MAAO,CACHT,KAAM,WACNU,WAAY,CACR,2BACA,2BACA,2BACA,2BACA,2BACA,2BACA,6BAGRC,QAAS,CACLC,EAAG,CACCC,OAAQ,mBAGhBC,OAAQ,CACJC,MAAM,EACNC,SAAU,WACVC,WAAW,uBACXC,SAAU,SACVC,QAAS,GACTC,QAAS,GACTC,OAAQ,CACJC,iBAAiB,GAErBC,QAAS,CACLC,MAAO,GACPzB,OAAQ,GACR0B,OAAQ,GAEZC,WAAY,CACRC,WAAY,GACZC,SAAU,KAmEPC,EA5DO,WAClB,IAAMC,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAEnC,EAAiBC,mBAAS,CACtB,CACIC,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,MAEpC,CACID,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAPhCC,EAAP,oBAWA,EAA8BH,mBAAqB/C,GAAnD,mBAAOmD,EAAP,KAAgBC,EAAhB,KAiCA,OAhCAC,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAAC6B,EAAMO,QAAQgB,UAAUC,KAAMxB,EAAMO,QAAQD,QAAQkB,MAC7D7C,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAI3EoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,MAIrBqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvD/B,QAAS,CACLmB,MAAmB,SAAZE,EAAqB,OAAS,SAEzClB,OAAQ,CACJO,OAAQ,CACJpB,OAAQ,oBAIrB,CAAC+B,EAASI,EAASG,EAAWG,EAASZ,IAGtC,qBAAK6B,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,OAAOD,OAAQ,SC/G5E6D,EAAkB,CACpB9D,MAAO,CACHE,KAAM,MACND,OAAQ,KAEZ8D,YAAa,CACTC,IAAK,CACDC,aAAc,EACdpC,YAAY,IAGpBtB,WAAY,CACRC,SAAS,GAEbG,MAAO,CACHC,WAAY,CACR,cACA,SACA,iBACA,cACA,QACA,SACA,QACA,gBACA,QACA,aA4DGsD,EArDM,WACjB,IAAMlC,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAE7BsB,EAAcnC,EAAMO,QAAQ6B,QAAQ1B,KAE1C,EAAiBI,mBAAS,CACtB,CACIE,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,SAFvDC,EAAP,oBAMA,EAA8BH,mBAAqBgB,GAAnD,mBAAOZ,EAAP,KAAgBC,EAAhB,KA6BA,OA3BAC,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAACgE,GACTxD,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,MAIlEoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAItGqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvD/B,QAAS,CACLmB,MAAmB,SAAZE,EAAqB,OAAS,gBAG9C,CAACA,EAASI,EAASG,EAAWG,EAASuB,IAGtC,qBAAKN,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,MAAMD,OAAQ,SChF3EoE,EAAqB,CACvBrE,MAAO,CACHE,KAAM,MACND,OAAQ,KAEZ8D,YAAa,CACTC,IAAK,CACDnC,YAAY,EACZyC,YAAa,MACbC,YAAa,YAGrBhE,WAAY,CACRC,SAAS,GAEbC,OAAQ,CACJQ,MAAM,EACNS,MAAO,EACPvB,OAAQ,CAAC,gBAEbQ,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAEzE8C,MAAO,CACHc,MAAO,CACHhC,KAAM,kBAGdiC,KAAM,CACFC,QAAS,GAEb7D,QAAS,CACL8D,EAAG,CACCC,UADD,SACWC,GACN,MAAM,KAAN,OAAYA,EAAZ,iBAIZ7D,OAAQ,CACJC,MAAM,EACNC,SAAU,WACVC,WAAW,uBACXC,SAAU,SACVC,QAAS,GACTC,QAAS,GACTC,OAAQ,CACJC,iBAAiB,GAErBC,QAAS,CACLC,MAAO,GACPzB,OAAQ,GACR0B,OAAQ,GAEZC,WAAY,CACRC,WAAY,GACZC,SAAU,IAGlBgD,WAAY,CACR,CACIC,WAAY,IACZ7B,QAAS,CACLQ,MAAO,CACHzC,MAAM,OA8EX+D,EArES,WACpB,IAAMhD,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAE7BU,EAAYvB,EAAMO,QAAQgB,UAAUC,KACpClD,EAAc0B,EAAMO,QAAQD,QAAQkB,KACpCW,EAAcnC,EAAMO,QAAQ6B,QAAQ1B,KAE1C,EAAiBI,mBAAS,CACtB,CACIC,KAAM,aACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAE3C,CACID,KAAM,UACNC,KAAM,CAAC,GAAI,GAAI,IAAK,GAAI,GAAI,IAAK,GAAI,IAAK,KAE9C,CACID,KAAM,iBACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAXxCC,EAAP,oBAeA,EAA8BH,mBAAqBuB,GAAnD,mBAAOnB,EAAP,KAAgBC,EAAhB,KAkCA,OAhCAC,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAACoD,EAAWjD,EAAa6D,GACjCxD,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAI7FoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,MAIrBqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvD/B,QAAS,CACLmB,MAAmB,SAAZE,EAAqB,OAAS,SAEzClB,OAAQ,CACJO,OAAQ,CACJpB,OAAQ,oBAIrB,CAAC+B,EAASI,EAASG,EAAWG,EAASW,EAAWjD,EAAa6D,IAG9D,qBAAKN,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,MAAMD,OAAQ,SCxI3EgF,EAAmB,CACrBjF,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNgF,KAAM,CACF1E,SAAS,IAGjBD,WAAY,CACRC,SAAS,GAEbC,OAAQ,CACJC,MAAO,YAEXC,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,SA0D9DuE,EApDO,WAClB,IAAMnD,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAC7BU,EAAYvB,EAAMO,QAAQgB,UAAUC,KAE1C,EAAiBV,mBAAS,CACtB,CACIC,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,QAHxCC,EAAP,oBAOA,EAA8BH,mBAAqBmC,GAAnD,mBAAO/B,EAAP,KAAgBC,EAAhB,KA4BA,OA1BAC,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAACoD,GACT5C,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAI7FoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,MAIrBqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvD/B,QAAS,CACLmB,MAAmB,SAAZE,EAAqB,OAAS,gBAG9C,CAACA,EAASI,EAASG,EAAWG,EAASW,IAEtC,qBAAKM,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,OAAOD,OAAQ,SCpE5EmF,EAAoB,CACtBpF,MAAO,CACHE,KAAM,OACNmF,SAAS,EACTpF,OAAQ,KAEZM,WAAY,CACRC,SAAS,GAEbC,OAAQ,CACJiB,MAAO,CAAC,EAAG,EAAG,IAElBf,MAAO,CACHC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAE3DI,OAAQ,CACJC,MAAM,EACNC,SAAU,WACVC,WAAW,uBACXC,SAAU,SACVC,QAAS,GACTC,QAAS,GACTC,OAAQ,CACJC,iBAAiB,GAErBC,QAAS,CACLC,MAAO,GACPzB,OAAQ,GACR0B,OAAQ,GAEZC,WAAY,CACRC,WAAY,GACZC,SAAU,IAGlB4B,MAAO,CACH,CACI4B,UAAW,CACPrE,MAAM,GAEVsE,WAAY,CACRtE,MAAM,EACNuE,MAAO,WAEXjE,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,YAGhBqE,MAAO,CACHhC,KAAM,2BACNiB,MAAO,CACH+B,MAAO,YAGf3E,QAAS,CACLL,SAAS,IAGjB,CACIiF,WAAY,SACZC,UAAU,EACVJ,UAAW,CACPrE,MAAM,GAEVsE,WAAY,CACRtE,MAAM,EACNuE,MAAO,WAEXjE,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,YAGhBqE,MAAO,CACHhC,KAAM,uCACNiB,MAAO,CACH+B,MAAO,aAInB,CACIC,WAAY,UACZC,UAAU,EACVJ,UAAW,CACPrE,MAAM,GAEVsE,WAAY,CACRtE,MAAM,EACNuE,MAAO,WAEXjE,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,YAGhBqE,MAAO,CACHhC,KAAM,4BACNiB,MAAO,CACH+B,MAAO,cAKvB3E,QAAS,CACL8E,MAAO,CACHnF,SAAS,EACTY,SAAU,UACVE,QAAS,GACTD,QAAS,MA+ENuE,EAxEQ,WACnB,IAAM5D,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAE7BU,EAAYvB,EAAMO,QAAQgB,UAAUC,KACpClD,EAAc0B,EAAMO,QAAQD,QAAQkB,KACpCW,EAAcnC,EAAMO,QAAQ6B,QAAQ1B,KAE1C,EAAiBI,mBAAS,CACtB,CACIC,KAAM,SACN7C,KAAM,SACN8C,KAAM,CAAC,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAEtC,CACID,KAAM,WACN7C,KAAM,SACN8C,KAAM,CAAC,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,KAErC,CACID,KAAM,UACN7C,KAAM,OACN8C,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,OAdpCC,EAAP,oBAkBA,EAA8BH,mBAAqBsC,GAAnD,mBAAOlC,EAAP,KAAgBC,EAAhB,KAkCA,OAhCAC,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAACoD,EAAWjD,EAAa6D,GACjCxD,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAIpFoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,MAIrBqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvD/B,QAAS,CACLmB,MAAmB,SAAZE,EAAqB,OAAS,SAEzClB,OAAQ,CACJO,OAAQ,CACJpB,OAAQ,oBAIrB,CAAC+B,EAASI,EAASG,EAAWG,EAASW,EAAWjD,EAAa6D,IAG9D,qBAAKN,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,YCvL7D2F,EAAkB,CACpB7F,MAAO,CACHE,KAAM,MACNwB,MAAO,IACPzB,OAAQ,KAEZsB,OAAQ,CAAC,SAAU,SAAU,SAAU,SAAU,UACjDP,OAAQ,CACJC,MAAM,EACNC,SAAU,WACVC,WAAW,uBACXE,QAAS,GACTC,QAAS,GACTC,OAAQ,CACJC,iBAAiB,GAErBC,QAAS,CACLC,MAAO,GACPzB,OAAQ,GACR0B,OAAQ,GAEZC,WAAY,CACRC,WAAY,GACZC,SAAU,IAGlBgD,WAAY,CACR,CACIC,WAAY,IACZ/E,MAAO,CACH0B,MAAO,IACPzB,OAAQ,KAEZiD,QAAS,CACLlC,OAAQ,CACJC,MAAM,EACNG,SAAU,cAoEf0E,EA3DM,WACjB,IAAM9D,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAC7BkD,EAAY/D,EAAMO,QAAQyD,WAAWC,MAE3C,EAAiBnD,mBAAS,CAAC,GAAI,GAAI,GAAI,GAAI,KAApCG,EAAP,oBACA,EAA8BH,mBAAqB+C,GAAnD,mBAAO3C,EAAP,KAAgBC,EAAhB,KAEMI,EAAYvB,EAAMO,QAAQgB,UAAUC,KACpClD,EAAc0B,EAAMO,QAAQD,QAAQkB,KACpCW,EAAcnC,EAAMO,QAAQ6B,QAAQ1B,KACpCwD,EAAQlE,EAAMO,QAAQ2D,MAAM1C,KAC5B2C,EAAcnE,EAAMO,QAAQ6D,QAAQ1D,KACpC2D,EAAarE,EAAMO,QAAQ+D,OAAO5D,KAkCxC,OAhCAU,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAACoD,EAAWjD,EAAa6D,EAAa+B,EAAOC,EAAaE,GAClE1F,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAI3EoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,MAIrBqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvD5B,OAAQ,CACJO,OAAQ,CACJpB,OAAQ,aAGhBM,OAAQ,CACJN,OAAQ,CAAC4F,WAGlB,CAAC7D,EAASI,EAASG,EAAWG,EAASmD,EAAWxC,EAAWjD,EAAa6D,EAAa+B,EAAOC,EAAaE,IAG1G,qBAAKxC,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,WCnG7DqG,EAAoB,CACtBvG,MAAO,CACH0B,MAAO,IACPzB,OAAQ,IACRC,KAAM,aAEVuE,KAAM,CACFC,QAAS,GAEb1D,OAAQ,CACJC,MAAM,EACNC,SAAU,WACVC,WAAW,uBACXE,QAAS,GACTC,QAAS,GACTC,OAAQ,CACJC,iBAAiB,GAErBC,QAAS,CACLC,MAAO,GACPzB,OAAQ,GACR0B,OAAQ,GAEZC,WAAY,CACRC,WAAY,GACZC,SAAU,IAGlBgD,WAAY,CACR,CACIC,WAAY,IACZ/E,MAAO,CACH0B,MAAO,IACPzB,OAAQ,KAEZiD,QAAS,CACLlC,OAAQ,CACJC,MAAM,EACNG,SAAU,cA8EfoF,EArEQ,WACnB,IAAMxE,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAC7BkD,EAAY/D,EAAMO,QAAQyD,WAAWC,MAE3C,EAAiBnD,mBAAmB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAA9DG,EAAP,oBACA,EAA8BH,mBAAqByD,GAAnD,mBAAOrD,EAAP,KAAgBC,EAAhB,KAEMI,EAAYvB,EAAMO,QAAQgB,UAAUC,KACpClD,EAAc0B,EAAMO,QAAQD,QAAQkB,KACpCW,EAAcnC,EAAMO,QAAQ6B,QAAQ1B,KACpCwD,EAAQlE,EAAMO,QAAQ2D,MAAM1C,KAC5B2C,EAAcnE,EAAMO,QAAQ6D,QAAQ1D,KACpC2D,EAAarE,EAAMO,QAAQ+D,OAAO5D,KA4CxC,OA1CAU,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAACoD,EAAWjD,EAAa6D,EAAa+B,EAAOC,EAAaE,EAAYH,GAC9EvF,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAI3EoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,MAIrBqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvD5B,OAAQ,CACJO,OAAQ,CACJpB,OAAQ,aAGhBM,OAAQ,CACJN,OAAQ,CAAC4F,IAEbhC,YAAa,CACT0C,UAAW,CACPC,MAAO,CACHC,YAAyB,SAAZzE,EAAqBO,EAAY,GAAKG,GAEvDgE,OAAQ,CACJC,gBAA6B,SAAZ3E,EAAqBO,EAAY,GAAKG,YAKxE,CAACV,EAASI,EAASG,EAAWG,EAASmD,EAAWxC,EAAWjD,EAAa6D,EAAa+B,EAAOC,EAAaE,IAG1G,qBAAKxC,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,iBC/G7D4G,EAAwB,CAC1B9G,MAAO,CACHE,KAAM,YACNwB,MAAO,IACPzB,OAAQ,KAEZ8D,YAAa,CACTgD,UAAW,CACPzF,QAAS,EACT0F,WAAY,EACZC,SAAU,IACVC,OAAQ,CACJC,OAAQ,EACRC,KAAM,MACNpB,WAAY,cACZqB,WAAOC,GAEX/G,WAAY,CACRwC,KAAM,CACF9B,MAAM,GAEVb,MAAO,CACHa,MAAM,MAKtBM,OAAQ,CAAC,QAAS,YAAa,WAAY,YAC3CP,OAAQ,CACJC,MAAM,EACNsG,UAAU,EACVrG,SAAU,OACVE,SAAU,OACVC,QAAS,EACTC,QAAS,GACTC,OAAQ,CACJC,iBAAiB,GAErBC,QAAS,CACL2F,KAAM,GAEVxC,UAbI,SAaMa,EAAoB+B,GAC1B,MAAM,GAAN,OAAU/B,EAAV,cAA0B+B,EAAKC,EAAEC,QAAQzE,OAAOuE,EAAKG,eAEzD/F,WAAY,CACRE,SAAU,IAGlBgD,WAAY,CACR,CACIC,WAAY,IACZ/E,MAAO,CACH0B,MAAO,IACPzB,OAAQ,KAEZiD,QAAS,CACLlC,OAAQ,CACJC,MAAM,EACNG,SAAU,cAkEfwG,EAvDY,SAACC,GACxB,IAAM7F,EAAQC,cAGNC,EAFcC,aAAY,SAACC,GAAD,OAAkCA,EAAMC,iBAElEH,QACAI,EAAYN,EAAMO,QAAQC,KAA1BF,QACFG,EAAYT,EAAMO,QAAQG,KAAKC,MAC/BC,EAAUZ,EAAMO,QAAQM,KAAK,KAEnC,EAAiBC,mBAAmB,CAAC,GAAI,GAAI,GAAI,KAA1CG,EAAP,oBACA,EAA8BH,mBAAqBgE,GAAnD,mBAAO5D,EAAP,KAAgBC,EAAhB,KAEMI,EAAYvB,EAAMO,QAAQgB,UAAUC,KACpClD,EAAc0B,EAAMO,QAAQD,QAAQkB,KACpCW,EAAcnC,EAAMO,QAAQ6B,QAAQ1B,KACpCwD,EAAQlE,EAAMO,QAAQ2D,MAAM1C,KAiClC,OA/BAJ,IAAMC,WAAU,WACZF,GAAW,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPnD,OAAQ,CAACoD,EAAWjD,EAAa6D,EAAa+B,GAC9CvF,MAAO,CACHY,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,EAASA,EAASA,EAASA,EAASA,EAASA,EAASA,MAI3EoB,MAAO,CACHnC,OAAQ,CACJkC,MAAO,CACHtD,OAAQ,CAACmC,MAIrBqB,KAAM,CACFC,YAAyB,SAAZ1B,EAAqBO,EAAY,GAAKG,GAEvDmB,YAAa,CACTgD,UAAW,CACPe,MAAO,CACH9B,WAAwB,SAAZ9D,EAAqBO,EAAY,GAAKG,YAKnE,CAACV,EAASI,EAASG,EAAWG,EAASW,EAAWjD,EAAa6D,EAAa+B,IAG3E,qBAAKrC,GAAG,QAAR,SACI,cAAC,IAAD,CAAgBX,QAASA,EAASD,OAAQA,EAAQ/C,KAAK,iBClEpD6H,UA7CG,kBACd,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAASC,IAAzB,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CAAUhE,MAAM,eAAhB,SACI,cAAC,EAAD,QAGR,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CAAUhE,MAAM,YAAhB,SACI,cAAC,EAAD,QAGR,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CAAUhE,MAAM,aAAhB,SACI,cAAC,EAAD,QAGR,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CAAUhE,MAAM,aAAhB,SACI,cAAC,EAAD,QAGR,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CAAUhE,MAAM,cAAhB,SACI,cAAC,EAAD,QAGR,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGG,GAAI,EAA9B,SACI,cAACD,EAAA,EAAD,CAAUhE,MAAM,eAAhB,SACI,cAAC,EAAD,QAGR,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGG,GAAI,EAA9B,SACI,cAACD,EAAA,EAAD,CAAUhE,MAAM,cAAhB,SACI,cAAC,EAAD,QAGR,cAACwD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGG,GAAI,EAA9B,SACI,cAACD,EAAA,EAAD,CAAUhE,MAAM,YAAhB,SACI,cAAC,EAAD","file":"static/js/166.eadb4e67.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\n\r\n// project imports\r\nimport value from 'assets/scss/_themes-vars.module.scss';\r\nimport { DefaultRootStateProps } from 'types';\r\n\r\n// chart options\r\nconst areaChartOptions = {\r\n    chart: {\r\n        height: 350,\r\n        type: 'area'\r\n    },\r\n    colors: [value.secondaryMain, value.primaryMain],\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'smooth'\r\n    },\r\n    xaxis: {\r\n        type: 'datetime',\r\n        categories: [\r\n            '2018-09-19T00:00:00.000Z',\r\n            '2018-09-19T01:30:00.000Z',\r\n            '2018-09-19T02:30:00.000Z',\r\n            '2018-09-19T03:30:00.000Z',\r\n            '2018-09-19T04:30:00.000Z',\r\n            '2018-09-19T05:30:00.000Z',\r\n            '2018-09-19T06:30:00.000Z'\r\n        ]\r\n    },\r\n    tooltip: {\r\n        x: {\r\n            format: 'dd/MM/yy HH:mm'\r\n        }\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontSize: '0.875rem',\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        position: 'bottom',\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: 5\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 8\r\n        }\r\n    }\r\n};\r\n\r\n// ==============================|| AREA CHART ||============================== //\r\n\r\nconst ApexAreaChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Series 1',\r\n            data: [31, 40, 28, 51, 42, 109, 100]\r\n        },\r\n        {\r\n            name: 'Series 2',\r\n            data: [11, 32, 45, 32, 34, 52, 41]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState<ChartProps>(areaChartOptions);\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [theme.palette.secondary.main, theme.palette.primary.main],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, theme]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"area\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexAreaChart;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\nimport { DefaultRootStateProps } from 'types';\r\n\r\n// chart options\r\nconst barChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 350\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            borderRadius: 4,\r\n            horizontal: true\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    xaxis: {\r\n        categories: [\r\n            'South Korea',\r\n            'Canada',\r\n            'United Kingdom',\r\n            'Netherlands',\r\n            'Italy',\r\n            'France',\r\n            'Japan',\r\n            'United States',\r\n            'China',\r\n            'Germany'\r\n        ]\r\n    }\r\n};\r\n\r\n// ==============================|| BAR CHART ||============================== //\r\n\r\nconst ApexBarChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const successDark = theme.palette.success.dark;\r\n\r\n    const [series] = useState([\r\n        {\r\n            data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState<ChartProps>(barChartOptions);\r\n\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [successDark],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, successDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexBarChart;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\nimport { DefaultRootStateProps } from 'types';\r\n\r\n// chart options\r\nconst columnChartOptions = {\r\n    chart: {\r\n        type: 'bar',\r\n        height: 350\r\n    },\r\n    plotOptions: {\r\n        bar: {\r\n            horizontal: false,\r\n            columnWidth: '55%',\r\n            endingShape: 'rounded'\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n    },\r\n    xaxis: {\r\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\r\n    },\r\n    yaxis: {\r\n        title: {\r\n            text: '$ (thousands)'\r\n        }\r\n    },\r\n    fill: {\r\n        opacity: 1\r\n    },\r\n    tooltip: {\r\n        y: {\r\n            formatter(val: number) {\r\n                return `$ ${val} thousands`;\r\n            }\r\n        }\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontSize: '0.875rem',\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        position: 'bottom',\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: 5\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 8\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 600,\r\n            options: {\r\n                yaxis: {\r\n                    show: false\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| COLUMN CHART ||============================== //\r\n\r\nconst ApexColumnChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const secondary = theme.palette.secondary.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Net Profit',\r\n            data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\r\n        },\r\n        {\r\n            name: 'Free Cash Flow',\r\n            data: [35, 41, 36, 26, 45, 48, 52, 53, 41]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState<ChartProps>(columnChartOptions);\r\n\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [secondary, primaryMain, successDark],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, secondary, primaryMain, successDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"bar\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexColumnChart;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\nimport { DefaultRootStateProps } from 'types';\r\n\r\n// chart options\r\nconst lineChartOptions = {\r\n    chart: {\r\n        height: 350,\r\n        type: 'line',\r\n        zoom: {\r\n            enabled: false\r\n        }\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        curve: 'straight'\r\n    },\r\n    xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep']\r\n    }\r\n};\r\n\r\n// ==============================|| LINE CHART ||============================== //\r\n\r\nconst ApexLineChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n    const secondary = theme.palette.secondary.main;\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Desktops',\r\n            data: [10, 41, 35, 51, 49, 62, 69, 91, 148]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState<ChartProps>(lineChartOptions);\r\n\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [secondary],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, secondary]);\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"line\" height={350} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexLineChart;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\nimport { DefaultRootStateProps } from 'types';\r\n\r\n// chart options\r\nconst mixedChartOptions = {\r\n    chart: {\r\n        type: 'line',\r\n        stacked: false,\r\n        height: 450\r\n    },\r\n    dataLabels: {\r\n        enabled: false\r\n    },\r\n    stroke: {\r\n        width: [1, 1, 4]\r\n    },\r\n    xaxis: {\r\n        categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016]\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontSize: '0.875rem',\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        position: 'bottom',\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 16,\r\n            height: 16,\r\n            radius: 5\r\n        },\r\n        itemMargin: {\r\n            horizontal: 15,\r\n            vertical: 8\r\n        }\r\n    },\r\n    yaxis: [\r\n        {\r\n            axisTicks: {\r\n                show: true\r\n            },\r\n            axisBorder: {\r\n                show: true,\r\n                color: '#008FFB'\r\n            },\r\n            labels: {\r\n                style: {\r\n                    colors: '#008FFB'\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Income (thousand crores)',\r\n                style: {\r\n                    color: '#008FFB'\r\n                }\r\n            },\r\n            tooltip: {\r\n                enabled: true\r\n            }\r\n        },\r\n        {\r\n            seriesName: 'Income',\r\n            opposite: true,\r\n            axisTicks: {\r\n                show: true\r\n            },\r\n            axisBorder: {\r\n                show: true,\r\n                color: '#00E396'\r\n            },\r\n            labels: {\r\n                style: {\r\n                    colors: '#00E396'\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Operating Cashflow (thousand crores)',\r\n                style: {\r\n                    color: '#00E396'\r\n                }\r\n            }\r\n        },\r\n        {\r\n            seriesName: 'Revenue',\r\n            opposite: true,\r\n            axisTicks: {\r\n                show: true\r\n            },\r\n            axisBorder: {\r\n                show: true,\r\n                color: '#FEB019'\r\n            },\r\n            labels: {\r\n                style: {\r\n                    colors: '#FEB019'\r\n                }\r\n            },\r\n            title: {\r\n                text: 'Revenue (thousand crores)',\r\n                style: {\r\n                    color: '#FEB019'\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    tooltip: {\r\n        fixed: {\r\n            enabled: true,\r\n            position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\r\n            offsetY: 30,\r\n            offsetX: 60\r\n        }\r\n    }\r\n};\r\n\r\n// ==============================|| LINE CHART ||============================== //\r\n\r\nconst ApexMixedChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const secondary = theme.palette.secondary.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n\r\n    const [series] = useState([\r\n        {\r\n            name: 'Income',\r\n            type: 'column',\r\n            data: [14, 2, 25, 15, 25, 28, 38, 46]\r\n        },\r\n        {\r\n            name: 'Cashflow',\r\n            type: 'column',\r\n            data: [11, 3, 31, 4, 41, 49, 65, 85]\r\n        },\r\n        {\r\n            name: 'Revenue',\r\n            type: 'line',\r\n            data: [20, 29, 37, 36, 44, 45, 50, 58]\r\n        }\r\n    ]);\r\n\r\n    const [options, setOptions] = useState<ChartProps>(mixedChartOptions);\r\n\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [secondary, primaryMain, successDark],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            tooltip: {\r\n                theme: navType === 'dark' ? 'dark' : 'light'\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, secondary, primaryMain, successDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"line\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexMixedChart;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\nimport { DefaultRootStateProps } from 'types';\r\n\r\n// chart options\r\nconst pieChartOptions = {\r\n    chart: {\r\n        type: 'pie',\r\n        width: 450,\r\n        height: 450\r\n    },\r\n    labels: ['Team A', 'Team B', 'Team C', 'Team D', 'Team E'],\r\n    legend: {\r\n        show: true,\r\n        fontSize: '0.875rem',\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 12,\r\n            height: 12,\r\n            radius: 5\r\n        },\r\n        itemMargin: {\r\n            horizontal: 25,\r\n            vertical: 4\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 450,\r\n            chart: {\r\n                width: 280,\r\n                height: 280\r\n            },\r\n            options: {\r\n                legend: {\r\n                    show: false,\r\n                    position: 'bottom'\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| PIE CHART ||============================== //\r\n\r\nconst ApexPieChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n    const backColor = theme.palette.background.paper;\r\n\r\n    const [series] = useState([44, 55, 13, 43, 22]);\r\n    const [options, setOptions] = useState<ChartProps>(pieChartOptions);\r\n\r\n    const secondary = theme.palette.secondary.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n    const error = theme.palette.error.main;\r\n    const warningDark = theme.palette.warning.dark;\r\n    const orangeDark = theme.palette.orange.dark;\r\n\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [secondary, primaryMain, successDark, error, warningDark, orangeDark],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            },\r\n            stroke: {\r\n                colors: [backColor]\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, backColor, secondary, primaryMain, successDark, error, warningDark, orangeDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"pie\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexPieChart;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\nimport { DefaultRootStateProps } from 'types';\r\n\r\n// chart options\r\nconst polarChartOptions = {\r\n    chart: {\r\n        width: 450,\r\n        height: 450,\r\n        type: 'polarArea'\r\n    },\r\n    fill: {\r\n        opacity: 1\r\n    },\r\n    legend: {\r\n        show: true,\r\n        fontSize: '0.875rem',\r\n        fontFamily: `'Roboto', sans-serif`,\r\n        offsetX: 10,\r\n        offsetY: 10,\r\n        labels: {\r\n            useSeriesColors: false\r\n        },\r\n        markers: {\r\n            width: 12,\r\n            height: 12,\r\n            radius: 5\r\n        },\r\n        itemMargin: {\r\n            horizontal: 25,\r\n            vertical: 4\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 450,\r\n            chart: {\r\n                width: 280,\r\n                height: 280\r\n            },\r\n            options: {\r\n                legend: {\r\n                    show: false,\r\n                    position: 'bottom'\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| POLAR CHART ||============================== //\r\n\r\nconst ApexPolarChart = () => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n    const backColor = theme.palette.background.paper;\r\n\r\n    const [series] = useState<number[]>([14, 23, 21, 17, 15, 10, 12, 17, 21]);\r\n    const [options, setOptions] = useState<ChartProps>(polarChartOptions);\r\n\r\n    const secondary = theme.palette.secondary.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n    const error = theme.palette.error.main;\r\n    const warningDark = theme.palette.warning.dark;\r\n    const orangeDark = theme.palette.orange.dark;\r\n\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [secondary, primaryMain, successDark, error, warningDark, orangeDark, error],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            legend: {\r\n                labels: {\r\n                    colors: 'grey.500'\r\n                }\r\n            },\r\n            stroke: {\r\n                colors: [backColor]\r\n            },\r\n            plotOptions: {\r\n                polarArea: {\r\n                    rings: {\r\n                        strokeColor: navType === 'dark' ? darkLight + 20 : grey200\r\n                    },\r\n                    spokes: {\r\n                        connectorColors: navType === 'dark' ? darkLight + 20 : grey200\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, backColor, secondary, primaryMain, successDark, error, warningDark, orangeDark]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"polarArea\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexPolarChart;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// material-ui\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// third-party\r\nimport ReactApexChart, { Props as ChartProps } from 'react-apexcharts';\r\nimport { DefaultRootStateProps, KeyedObject } from 'types';\r\n\r\n// chart options\r\nconst redialBarChartOptions = {\r\n    chart: {\r\n        type: 'radialBar',\r\n        width: 450,\r\n        height: 450\r\n    },\r\n    plotOptions: {\r\n        radialBar: {\r\n            offsetY: 0,\r\n            startAngle: 0,\r\n            endAngle: 270,\r\n            hollow: {\r\n                margin: 5,\r\n                size: '30%',\r\n                background: 'transparent',\r\n                image: undefined\r\n            },\r\n            dataLabels: {\r\n                name: {\r\n                    show: false\r\n                },\r\n                value: {\r\n                    show: false\r\n                }\r\n            }\r\n        }\r\n    },\r\n    labels: ['Vimeo', 'Messenger', 'Facebook', 'LinkedIn'],\r\n    legend: {\r\n        show: true,\r\n        floating: true,\r\n        fontSize: '1rem',\r\n        position: 'left',\r\n        offsetX: 0,\r\n        offsetY: 15,\r\n        labels: {\r\n            useSeriesColors: true\r\n        },\r\n        markers: {\r\n            size: 0\r\n        },\r\n        formatter(seriesName: string, opts: KeyedObject) {\r\n            return `${seriesName}:  ${opts.w.globals.series[opts.seriesIndex]}`;\r\n        },\r\n        itemMargin: {\r\n            vertical: 3\r\n        }\r\n    },\r\n    responsive: [\r\n        {\r\n            breakpoint: 450,\r\n            chart: {\r\n                width: 280,\r\n                height: 280\r\n            },\r\n            options: {\r\n                legend: {\r\n                    show: false,\r\n                    position: 'bottom'\r\n                }\r\n            }\r\n        }\r\n    ]\r\n};\r\n\r\n// ==============================|| RADIAL BAR CHART ||============================== //\r\n\r\nexport interface ApexRedialBarChartProps extends ChartProps {}\r\n\r\nconst ApexRedialBarChart = (props: ApexRedialBarChartProps) => {\r\n    const theme = useTheme();\r\n    const customization = useSelector((state: DefaultRootStateProps) => state.customization);\r\n\r\n    const { navType } = customization;\r\n    const { primary } = theme.palette.text;\r\n    const darkLight = theme.palette.dark.light;\r\n    const grey200 = theme.palette.grey[200];\r\n\r\n    const [series] = useState<number[]>([76, 67, 61, 90]);\r\n    const [options, setOptions] = useState<ChartProps>(redialBarChartOptions);\r\n\r\n    const secondary = theme.palette.secondary.main;\r\n    const primaryMain = theme.palette.primary.main;\r\n    const successDark = theme.palette.success.dark;\r\n    const error = theme.palette.error.main;\r\n\r\n    React.useEffect(() => {\r\n        setOptions((prevState) => ({\r\n            ...prevState,\r\n            colors: [secondary, primaryMain, successDark, error],\r\n            xaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary, primary, primary, primary, primary, primary, primary]\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: [primary]\r\n                    }\r\n                }\r\n            },\r\n            grid: {\r\n                borderColor: navType === 'dark' ? darkLight + 20 : grey200\r\n            },\r\n            plotOptions: {\r\n                radialBar: {\r\n                    track: {\r\n                        background: navType === 'dark' ? darkLight + 20 : grey200\r\n                    }\r\n                }\r\n            }\r\n        }));\r\n    }, [navType, primary, darkLight, grey200, secondary, primaryMain, successDark, error]);\r\n\r\n    return (\r\n        <div id=\"chart\">\r\n            <ReactApexChart options={options} series={series} type=\"radialBar\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ApexRedialBarChart;\r\n","// material-ui\r\nimport { Grid } from '@mui/material';\r\n\r\n// project imports\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\n// charts\r\nimport ApexAreaChart from './ApexAreaChart';\r\nimport ApexBarChart from './ApexBarChart';\r\nimport ApexColumnChart from './ApexColumnChart';\r\nimport ApexLineChart from './ApexLineChart';\r\nimport ApexMixedChart from './ApexMixedChart';\r\nimport ApexPieChart from './ApexPieChart';\r\nimport ApexPolarChart from './ApexPolarChart';\r\nimport ApexRedialBarChart from './ApexRedialChart';\r\n\r\n// ==============================|| APEX CHARTS ||============================== //\r\n\r\nconst Apexchart = () => (\r\n    <Grid container spacing={gridSpacing}>\r\n        <Grid item xs={12} md={6} lg={6}>\r\n            <MainCard title=\"Column Chart\">\r\n                <ApexColumnChart />\r\n            </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={6}>\r\n            <MainCard title=\"Bar Chart\">\r\n                <ApexBarChart />\r\n            </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n            <MainCard title=\"Line Chart\">\r\n                <ApexLineChart />\r\n            </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n            <MainCard title=\"Area Chart\">\r\n                <ApexAreaChart />\r\n            </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n            <MainCard title=\"Mixed Chart\">\r\n                <ApexMixedChart />\r\n            </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} xl={4}>\r\n            <MainCard title=\"Redial Chart\">\r\n                <ApexRedialBarChart />\r\n            </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} xl={4}>\r\n            <MainCard title=\"Polar Chart\">\r\n                <ApexPolarChart />\r\n            </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} md={6} xl={4}>\r\n            <MainCard title=\"Pie Chart\">\r\n                <ApexPieChart />\r\n            </MainCard>\r\n        </Grid>\r\n    </Grid>\r\n);\r\n\r\nexport default Apexchart;\r\n"],"sourceRoot":""}